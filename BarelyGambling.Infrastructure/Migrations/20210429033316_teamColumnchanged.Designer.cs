// <auto-generated />
using System;
using BarelyGambling.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BarelyGambling.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210429033316_teamColumnchanged")]
    partial class teamColumnchanged
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BarelyGambling.Core.Entity.Bidding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.HasIndex("UserId");

                    b.ToTable("Bidding");
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("BiddingRestrictedTo")
                        .HasColumnType("real");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.Property<Guid>("TournamentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Won")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("TournamentId");

                    b.ToTable("Team");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8b0e73b4-0a84-4940-8f71-1aa85c9432b1"),
                            BiddingRestrictedTo = 0f,
                            Description = "Sample description for A1 Grand Prix Team 1",
                            Title = "A1 Grand Prix Team 1",
                            Total = 0f,
                            TournamentId = new Guid("e611d79d-0a26-40fa-9df9-5315bbf589be"),
                            Won = true
                        },
                        new
                        {
                            Id = new Guid("02fd4c1a-ad53-4f7c-87aa-3ecc9261bec2"),
                            BiddingRestrictedTo = 0f,
                            Description = "Sample description for A1 Grand Prix Team 2",
                            Title = "A1 Grand Prix Team 2",
                            Total = 0f,
                            TournamentId = new Guid("e611d79d-0a26-40fa-9df9-5315bbf589be"),
                            Won = false
                        },
                        new
                        {
                            Id = new Guid("ae095d8e-b47e-471e-835e-61f7abc950b4"),
                            BiddingRestrictedTo = 0f,
                            Description = "Sample description for Formula One World Championship Team 1",
                            Title = "Formula One World Championship Team 1",
                            Total = 0f,
                            TournamentId = new Guid("3b539340-b19e-4af7-ae04-6efcd34e7474"),
                            Won = true
                        },
                        new
                        {
                            Id = new Guid("ac4e57f9-e8e2-4757-bc7c-11b4d11e1be7"),
                            BiddingRestrictedTo = 0f,
                            Description = "Sample description for Formula One World Championship Team 2",
                            Title = "Formula One World Championship Team 2",
                            Total = 0f,
                            TournamentId = new Guid("3b539340-b19e-4af7-ae04-6efcd34e7474"),
                            Won = false
                        },
                        new
                        {
                            Id = new Guid("2186f576-6338-41bd-9f89-f79bc6648279"),
                            BiddingRestrictedTo = 0f,
                            Description = "Sample description for FIA World Endurance Championship Team 1",
                            Title = "FIA World Endurance Championship Team 1",
                            Total = 0f,
                            TournamentId = new Guid("e02f13a1-f68c-4a28-90f3-7a416b08eb87"),
                            Won = true
                        },
                        new
                        {
                            Id = new Guid("f71d4710-aeb0-4e7e-90bb-6b2a67a480ba"),
                            BiddingRestrictedTo = 0f,
                            Description = "Sample description for FIA World Endurance Championship Team 2",
                            Title = "FIA World Endurance Championship Team 2",
                            Total = 0f,
                            TournamentId = new Guid("e02f13a1-f68c-4a28-90f3-7a416b08eb87"),
                            Won = false
                        },
                        new
                        {
                            Id = new Guid("c24e6077-c541-4ec0-a095-b1d3335d961a"),
                            BiddingRestrictedTo = 0f,
                            Description = "Sample description for FIA GT1 World Championship Team 1",
                            Title = "FIA GT1 World Championship Team 1",
                            Total = 0f,
                            TournamentId = new Guid("ee6119ae-7fb1-4696-90ab-b79c9512103a"),
                            Won = true
                        },
                        new
                        {
                            Id = new Guid("f6dd0db4-4092-4cad-9fe8-257e46ffa125"),
                            BiddingRestrictedTo = 0f,
                            Description = "Sample description for FIA GT1 World Championship Team 2",
                            Title = "FIA GT1 World Championship Team 2",
                            Total = 0f,
                            TournamentId = new Guid("ee6119ae-7fb1-4696-90ab-b79c9512103a"),
                            Won = false
                        },
                        new
                        {
                            Id = new Guid("04ed3c78-526f-469b-b7ad-e08748b7467e"),
                            BiddingRestrictedTo = 0f,
                            Description = "Sample description for World Gliding Championships Team 1",
                            Title = "World Gliding Championships Team 1",
                            Total = 0f,
                            TournamentId = new Guid("906902c8-34dd-42c7-9296-09000832de6a"),
                            Won = true
                        },
                        new
                        {
                            Id = new Guid("b0000861-a875-4018-ba35-e6afd961afee"),
                            BiddingRestrictedTo = 0f,
                            Description = "Sample description for World Gliding Championships Team 2",
                            Title = "World Gliding Championships Team 2",
                            Total = 0f,
                            TournamentId = new Guid("906902c8-34dd-42c7-9296-09000832de6a"),
                            Won = false
                        });
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.TeamMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PlayerType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.HasIndex("UserId");

                    b.ToTable("TeamMember");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cae34f97-bd33-4b53-9fe1-d95da85d5b2b"),
                            PlayerType = 0,
                            TeamId = new Guid("8b0e73b4-0a84-4940-8f71-1aa85c9432b1"),
                            UserId = new Guid("cd5b4687-7187-42d3-9a29-ebbd15d6274b")
                        },
                        new
                        {
                            Id = new Guid("afe38b4a-ac29-4fe0-9a8b-725e89187c75"),
                            PlayerType = 0,
                            TeamId = new Guid("8b0e73b4-0a84-4940-8f71-1aa85c9432b1"),
                            UserId = new Guid("cd5b4687-7187-42d3-9a29-ebbd15d6274b")
                        },
                        new
                        {
                            Id = new Guid("fe0ef53e-9349-4e9c-9ede-0b57e61f8ba7"),
                            PlayerType = 0,
                            TeamId = new Guid("02fd4c1a-ad53-4f7c-87aa-3ecc9261bec2"),
                            UserId = new Guid("cd5b4687-7187-42d3-9a29-ebbd15d6274b")
                        },
                        new
                        {
                            Id = new Guid("1cc0e4ad-0156-4010-b360-80cb3361edcf"),
                            PlayerType = 0,
                            TeamId = new Guid("02fd4c1a-ad53-4f7c-87aa-3ecc9261bec2"),
                            UserId = new Guid("cd5b4687-7187-42d3-9a29-ebbd15d6274b")
                        },
                        new
                        {
                            Id = new Guid("447e4b26-fbe2-4d4a-8b5a-2131e83466ac"),
                            PlayerType = 0,
                            TeamId = new Guid("ae095d8e-b47e-471e-835e-61f7abc950b4"),
                            UserId = new Guid("afe37548-6057-44e7-a15d-b257dcf7ca95")
                        },
                        new
                        {
                            Id = new Guid("e0bda98d-9d33-4bd7-b2d2-d6a5f08d3725"),
                            PlayerType = 0,
                            TeamId = new Guid("ae095d8e-b47e-471e-835e-61f7abc950b4"),
                            UserId = new Guid("afe37548-6057-44e7-a15d-b257dcf7ca95")
                        },
                        new
                        {
                            Id = new Guid("920b8ac8-e242-4b15-bd1a-f229e1936353"),
                            PlayerType = 0,
                            TeamId = new Guid("ac4e57f9-e8e2-4757-bc7c-11b4d11e1be7"),
                            UserId = new Guid("afe37548-6057-44e7-a15d-b257dcf7ca95")
                        },
                        new
                        {
                            Id = new Guid("35c47c75-fb41-485c-8e00-a767b7feab3c"),
                            PlayerType = 0,
                            TeamId = new Guid("ac4e57f9-e8e2-4757-bc7c-11b4d11e1be7"),
                            UserId = new Guid("afe37548-6057-44e7-a15d-b257dcf7ca95")
                        },
                        new
                        {
                            Id = new Guid("b5adfcbc-dac7-4fba-9678-2f86d4063df5"),
                            PlayerType = 0,
                            TeamId = new Guid("2186f576-6338-41bd-9f89-f79bc6648279"),
                            UserId = new Guid("56d8ad32-ef5e-45bd-93be-df9f6eab171e")
                        },
                        new
                        {
                            Id = new Guid("9eb3fca8-802c-44e0-a0d3-92ecf164459d"),
                            PlayerType = 0,
                            TeamId = new Guid("2186f576-6338-41bd-9f89-f79bc6648279"),
                            UserId = new Guid("56d8ad32-ef5e-45bd-93be-df9f6eab171e")
                        },
                        new
                        {
                            Id = new Guid("9f36fe3b-101e-4bf4-b01e-e9f1061d203b"),
                            PlayerType = 0,
                            TeamId = new Guid("f71d4710-aeb0-4e7e-90bb-6b2a67a480ba"),
                            UserId = new Guid("56d8ad32-ef5e-45bd-93be-df9f6eab171e")
                        },
                        new
                        {
                            Id = new Guid("81fb2d52-29f9-42af-aa64-0fdc3d0dbf64"),
                            PlayerType = 0,
                            TeamId = new Guid("f71d4710-aeb0-4e7e-90bb-6b2a67a480ba"),
                            UserId = new Guid("56d8ad32-ef5e-45bd-93be-df9f6eab171e")
                        },
                        new
                        {
                            Id = new Guid("7b5a116e-961f-4b7e-9bab-51abb14f52e3"),
                            PlayerType = 0,
                            TeamId = new Guid("c24e6077-c541-4ec0-a095-b1d3335d961a"),
                            UserId = new Guid("ef1615c8-b79b-470f-b3ed-87984141a8a5")
                        },
                        new
                        {
                            Id = new Guid("074a7401-6d64-4436-8375-bf92b0c29d16"),
                            PlayerType = 0,
                            TeamId = new Guid("c24e6077-c541-4ec0-a095-b1d3335d961a"),
                            UserId = new Guid("ef1615c8-b79b-470f-b3ed-87984141a8a5")
                        },
                        new
                        {
                            Id = new Guid("8f74b356-9b6d-4989-ad5d-3c6c62c19de0"),
                            PlayerType = 0,
                            TeamId = new Guid("f6dd0db4-4092-4cad-9fe8-257e46ffa125"),
                            UserId = new Guid("ef1615c8-b79b-470f-b3ed-87984141a8a5")
                        },
                        new
                        {
                            Id = new Guid("36ee3c12-5468-41e6-a38a-578a85c0af03"),
                            PlayerType = 0,
                            TeamId = new Guid("f6dd0db4-4092-4cad-9fe8-257e46ffa125"),
                            UserId = new Guid("ef1615c8-b79b-470f-b3ed-87984141a8a5")
                        },
                        new
                        {
                            Id = new Guid("c11529e9-122e-4e53-acb7-c991e9294a96"),
                            PlayerType = 0,
                            TeamId = new Guid("04ed3c78-526f-469b-b7ad-e08748b7467e"),
                            UserId = new Guid("191e4f5d-3c7e-4670-aced-e9566f4d11e7")
                        },
                        new
                        {
                            Id = new Guid("64caa2ca-5c4b-4bb1-8f62-a0d4a91727c8"),
                            PlayerType = 0,
                            TeamId = new Guid("04ed3c78-526f-469b-b7ad-e08748b7467e"),
                            UserId = new Guid("191e4f5d-3c7e-4670-aced-e9566f4d11e7")
                        },
                        new
                        {
                            Id = new Guid("6ac8a735-784a-4a04-951d-9c1fac7f4294"),
                            PlayerType = 0,
                            TeamId = new Guid("b0000861-a875-4018-ba35-e6afd961afee"),
                            UserId = new Guid("191e4f5d-3c7e-4670-aced-e9566f4d11e7")
                        },
                        new
                        {
                            Id = new Guid("22a9718d-6914-488c-a0ae-333147838568"),
                            PlayerType = 0,
                            TeamId = new Guid("b0000861-a875-4018-ba35-e6afd961afee"),
                            UserId = new Guid("191e4f5d-3c7e-4670-aced-e9566f4d11e7")
                        });
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.Tournament", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("TournamentPrize")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Tournament");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e611d79d-0a26-40fa-9df9-5315bbf589be"),
                            CreatedAt = new DateTime(2021, 4, 29, 9, 3, 15, 826, DateTimeKind.Local).AddTicks(6457),
                            CreatedBy = new Guid("cd5b4687-7187-42d3-9a29-ebbd15d6274b"),
                            Description = "Sample description for A1 Grand Prix",
                            Place = "Los Angeles",
                            StartingDate = new DateTime(2021, 5, 2, 9, 3, 15, 824, DateTimeKind.Local).AddTicks(7346),
                            Title = "A1 Grand Prix",
                            TournamentPrize = 98208656f
                        },
                        new
                        {
                            Id = new Guid("3b539340-b19e-4af7-ae04-6efcd34e7474"),
                            CreatedAt = new DateTime(2021, 4, 29, 9, 3, 15, 828, DateTimeKind.Local).AddTicks(9318),
                            CreatedBy = new Guid("afe37548-6057-44e7-a15d-b257dcf7ca95"),
                            Description = "Sample description for Formula One World Championship",
                            Place = "Los Angeles",
                            StartingDate = new DateTime(2021, 5, 4, 9, 3, 15, 828, DateTimeKind.Local).AddTicks(9257),
                            Title = "Formula One World Championship",
                            TournamentPrize = 1924158f
                        },
                        new
                        {
                            Id = new Guid("e02f13a1-f68c-4a28-90f3-7a416b08eb87"),
                            CreatedAt = new DateTime(2021, 4, 29, 9, 3, 15, 829, DateTimeKind.Local).AddTicks(37),
                            CreatedBy = new Guid("56d8ad32-ef5e-45bd-93be-df9f6eab171e"),
                            Description = "Sample description for FIA World Endurance Championship",
                            Place = "Los Angeles",
                            StartingDate = new DateTime(2021, 5, 7, 9, 3, 15, 829, DateTimeKind.Local).AddTicks(32),
                            Title = "FIA World Endurance Championship",
                            TournamentPrize = 47768164f
                        },
                        new
                        {
                            Id = new Guid("ee6119ae-7fb1-4696-90ab-b79c9512103a"),
                            CreatedAt = new DateTime(2021, 4, 29, 9, 3, 15, 829, DateTimeKind.Local).AddTicks(555),
                            CreatedBy = new Guid("ef1615c8-b79b-470f-b3ed-87984141a8a5"),
                            Description = "Sample description for FIA GT1 World Championship",
                            Place = "Los Angeles",
                            StartingDate = new DateTime(2021, 4, 29, 9, 3, 15, 829, DateTimeKind.Local).AddTicks(550),
                            Title = "FIA GT1 World Championship",
                            TournamentPrize = 28883968f
                        },
                        new
                        {
                            Id = new Guid("906902c8-34dd-42c7-9296-09000832de6a"),
                            CreatedAt = new DateTime(2021, 4, 29, 9, 3, 15, 829, DateTimeKind.Local).AddTicks(1156),
                            CreatedBy = new Guid("191e4f5d-3c7e-4670-aced-e9566f4d11e7"),
                            Description = "Sample description for World Gliding Championships",
                            Place = "Los Angeles",
                            StartingDate = new DateTime(2021, 5, 8, 9, 3, 15, 829, DateTimeKind.Local).AddTicks(1150),
                            Title = "World Gliding Championships",
                            TournamentPrize = 24374584f
                        });
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CoverUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dc06a474-5a03-412c-ae6c-0a67cfb80bb1"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "MichaelDavid1@gmail.com",
                            FirstName = "Michael",
                            LastName = "David",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "MichaelDavid1"
                        },
                        new
                        {
                            Id = new Guid("cd5b4687-7187-42d3-9a29-ebbd15d6274b"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "WilliamRichard2@gmail.com",
                            FirstName = "William",
                            LastName = "Richard",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "WilliamRichard2"
                        },
                        new
                        {
                            Id = new Guid("afe37548-6057-44e7-a15d-b257dcf7ca95"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "JohnCharles3@gmail.com",
                            FirstName = "John",
                            LastName = "Charles",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "JohnCharles3"
                        },
                        new
                        {
                            Id = new Guid("56d8ad32-ef5e-45bd-93be-df9f6eab171e"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "CharlesDavid4@gmail.com",
                            FirstName = "Charles",
                            LastName = "David",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "CharlesDavid4"
                        },
                        new
                        {
                            Id = new Guid("ef1615c8-b79b-470f-b3ed-87984141a8a5"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "RichardCharles5@gmail.com",
                            FirstName = "Richard",
                            LastName = "Charles",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "RichardCharles5"
                        },
                        new
                        {
                            Id = new Guid("191e4f5d-3c7e-4670-aced-e9566f4d11e7"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "RichardCharles6@gmail.com",
                            FirstName = "Richard",
                            LastName = "Charles",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "RichardCharles6"
                        },
                        new
                        {
                            Id = new Guid("2451e0f4-cade-4902-8ed5-18e4a6270c1b"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "WilliamWilliam7@gmail.com",
                            FirstName = "William",
                            LastName = "William",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "WilliamWilliam7"
                        },
                        new
                        {
                            Id = new Guid("d354468c-b5fb-444a-b2e6-3fd6cddfc47b"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "ThomasJoseph8@gmail.com",
                            FirstName = "Thomas",
                            LastName = "Joseph",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "ThomasJoseph8"
                        },
                        new
                        {
                            Id = new Guid("a0bb16b1-3d09-4c5a-b26b-b9dc1d2e600b"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "JohnMichael9@gmail.com",
                            FirstName = "John",
                            LastName = "Michael",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "JohnMichael9"
                        },
                        new
                        {
                            Id = new Guid("56f14b92-322a-4a53-8769-6082895094d8"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "JamesJoseph10@gmail.com",
                            FirstName = "James",
                            LastName = "Joseph",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "JamesJoseph10"
                        },
                        new
                        {
                            Id = new Guid("85cef19f-8cf6-4b0e-b15d-ea6f2f0a5920"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "RobertWilliam11@gmail.com",
                            FirstName = "Robert",
                            LastName = "William",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "RobertWilliam11"
                        },
                        new
                        {
                            Id = new Guid("04617956-4130-4401-9d00-f64768321149"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "JohnRobert12@gmail.com",
                            FirstName = "John",
                            LastName = "Robert",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "JohnRobert12"
                        },
                        new
                        {
                            Id = new Guid("78151af4-e289-4e3e-8846-9cd0c583ecc9"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "MichaelDavid13@gmail.com",
                            FirstName = "Michael",
                            LastName = "David",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "MichaelDavid13"
                        },
                        new
                        {
                            Id = new Guid("4256708a-8bb1-4f8b-91f7-5e7a8f086990"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "JohnRichard14@gmail.com",
                            FirstName = "John",
                            LastName = "Richard",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "JohnRichard14"
                        },
                        new
                        {
                            Id = new Guid("02bdfb5b-2a23-4157-822a-2a3236bbf54a"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "DavidWilliam15@gmail.com",
                            FirstName = "David",
                            LastName = "William",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "DavidWilliam15"
                        },
                        new
                        {
                            Id = new Guid("6875e1e4-059b-49cf-bd07-843be6e7a235"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "JosephJames16@gmail.com",
                            FirstName = "Joseph",
                            LastName = "James",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "JosephJames16"
                        },
                        new
                        {
                            Id = new Guid("94a4d9f8-fd57-4927-bfb2-d5706c5fe118"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "ThomasThomas17@gmail.com",
                            FirstName = "Thomas",
                            LastName = "Thomas",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "ThomasThomas17"
                        },
                        new
                        {
                            Id = new Guid("1613f4fe-6a42-4ec9-8c9f-94b3e748d102"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "RobertJames18@gmail.com",
                            FirstName = "Robert",
                            LastName = "James",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "RobertJames18"
                        },
                        new
                        {
                            Id = new Guid("d8424614-6592-4446-ae7a-d113e15fca46"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "JamesThomas19@gmail.com",
                            FirstName = "James",
                            LastName = "Thomas",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "JamesThomas19"
                        });
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.Bidding", b =>
                {
                    b.HasOne("BarelyGambling.Core.Entity.Team", null)
                        .WithMany("Biddings")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BarelyGambling.Core.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.Team", b =>
                {
                    b.HasOne("BarelyGambling.Core.Entity.Tournament", "Tournament")
                        .WithMany("Teams")
                        .HasForeignKey("TournamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.TeamMember", b =>
                {
                    b.HasOne("BarelyGambling.Core.Entity.Team", null)
                        .WithMany("TeamMembers")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BarelyGambling.Core.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.Tournament", b =>
                {
                    b.HasOne("BarelyGambling.Core.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
