// <auto-generated />
using System;
using BarelyGambling.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BarelyGambling.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210429064352_TournamentTableChanged")]
    partial class TournamentTableChanged
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BarelyGambling.Core.Entity.Bidding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.HasIndex("UserId");

                    b.ToTable("Bidding");
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("BiddingRestrictedTo")
                        .HasColumnType("real");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.Property<Guid>("TournamentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Won")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("TournamentId");

                    b.ToTable("Team");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c156b6b6-b0b4-485a-93b4-de4aae62055d"),
                            BiddingRestrictedTo = 0f,
                            Description = "Sample description for A1 Grand Prix Team 1",
                            Title = "A1 Grand Prix Team 1",
                            Total = 0f,
                            TournamentId = new Guid("0553498d-b9e3-4a76-9b48-bd50edf7f815"),
                            Won = true
                        },
                        new
                        {
                            Id = new Guid("add89ca3-4406-4aaf-a27c-d97bf0bdc217"),
                            BiddingRestrictedTo = 0f,
                            Description = "Sample description for A1 Grand Prix Team 2",
                            Title = "A1 Grand Prix Team 2",
                            Total = 0f,
                            TournamentId = new Guid("0553498d-b9e3-4a76-9b48-bd50edf7f815"),
                            Won = false
                        },
                        new
                        {
                            Id = new Guid("6b1675bd-d745-4c9f-8a4f-e8ddf87943af"),
                            BiddingRestrictedTo = 0f,
                            Description = "Sample description for Formula One World Championship Team 1",
                            Title = "Formula One World Championship Team 1",
                            Total = 0f,
                            TournamentId = new Guid("7d2445cb-d274-488a-8c0e-41c73d6c8f31"),
                            Won = true
                        },
                        new
                        {
                            Id = new Guid("bffadcbc-66d6-483f-a4cb-bb40a0db68b7"),
                            BiddingRestrictedTo = 0f,
                            Description = "Sample description for Formula One World Championship Team 2",
                            Title = "Formula One World Championship Team 2",
                            Total = 0f,
                            TournamentId = new Guid("7d2445cb-d274-488a-8c0e-41c73d6c8f31"),
                            Won = false
                        },
                        new
                        {
                            Id = new Guid("b8f8d5e7-62e4-4bb4-bae6-40e4ff597414"),
                            BiddingRestrictedTo = 0f,
                            Description = "Sample description for FIA World Endurance Championship Team 1",
                            Title = "FIA World Endurance Championship Team 1",
                            Total = 0f,
                            TournamentId = new Guid("40fc5578-4199-4d40-a0a7-db1d05817dfc"),
                            Won = true
                        },
                        new
                        {
                            Id = new Guid("5b6d5f7c-8618-4d84-8869-484eb4b3efcc"),
                            BiddingRestrictedTo = 0f,
                            Description = "Sample description for FIA World Endurance Championship Team 2",
                            Title = "FIA World Endurance Championship Team 2",
                            Total = 0f,
                            TournamentId = new Guid("40fc5578-4199-4d40-a0a7-db1d05817dfc"),
                            Won = false
                        },
                        new
                        {
                            Id = new Guid("01ce99f8-f922-45c4-b3ab-2f41462207b1"),
                            BiddingRestrictedTo = 0f,
                            Description = "Sample description for FIA GT1 World Championship Team 1",
                            Title = "FIA GT1 World Championship Team 1",
                            Total = 0f,
                            TournamentId = new Guid("849a8d54-283c-4c8d-8a41-8deeb0333f51"),
                            Won = true
                        },
                        new
                        {
                            Id = new Guid("399e6797-4053-4ddc-beb0-f20a50c1e555"),
                            BiddingRestrictedTo = 0f,
                            Description = "Sample description for FIA GT1 World Championship Team 2",
                            Title = "FIA GT1 World Championship Team 2",
                            Total = 0f,
                            TournamentId = new Guid("849a8d54-283c-4c8d-8a41-8deeb0333f51"),
                            Won = false
                        },
                        new
                        {
                            Id = new Guid("e9674b0e-6d7e-4ac4-adf4-b693cc60f726"),
                            BiddingRestrictedTo = 0f,
                            Description = "Sample description for World Gliding Championships Team 1",
                            Title = "World Gliding Championships Team 1",
                            Total = 0f,
                            TournamentId = new Guid("12211770-08b6-485b-af05-1af514435f5e"),
                            Won = true
                        },
                        new
                        {
                            Id = new Guid("fef73b7f-b197-4763-a2fe-1faebe8795c5"),
                            BiddingRestrictedTo = 0f,
                            Description = "Sample description for World Gliding Championships Team 2",
                            Title = "World Gliding Championships Team 2",
                            Total = 0f,
                            TournamentId = new Guid("12211770-08b6-485b-af05-1af514435f5e"),
                            Won = false
                        });
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.TeamMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PlayerType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.HasIndex("UserId");

                    b.ToTable("TeamMember");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cada4617-0fa3-4fad-b58f-747a6d45d3c3"),
                            PlayerType = 0,
                            TeamId = new Guid("c156b6b6-b0b4-485a-93b4-de4aae62055d"),
                            UserId = new Guid("c084366b-51b4-4ee4-97c4-9ef163d64784")
                        },
                        new
                        {
                            Id = new Guid("07722069-d718-4d2c-a3f6-3a8e0299b248"),
                            PlayerType = 0,
                            TeamId = new Guid("c156b6b6-b0b4-485a-93b4-de4aae62055d"),
                            UserId = new Guid("c084366b-51b4-4ee4-97c4-9ef163d64784")
                        },
                        new
                        {
                            Id = new Guid("435ef6ef-4206-4776-a51b-8b63130681da"),
                            PlayerType = 0,
                            TeamId = new Guid("add89ca3-4406-4aaf-a27c-d97bf0bdc217"),
                            UserId = new Guid("c084366b-51b4-4ee4-97c4-9ef163d64784")
                        },
                        new
                        {
                            Id = new Guid("45dec03e-4acc-408d-b482-ea9e96856887"),
                            PlayerType = 0,
                            TeamId = new Guid("add89ca3-4406-4aaf-a27c-d97bf0bdc217"),
                            UserId = new Guid("c084366b-51b4-4ee4-97c4-9ef163d64784")
                        },
                        new
                        {
                            Id = new Guid("ca22fd0b-20dd-4f82-b3a9-b078a838c072"),
                            PlayerType = 0,
                            TeamId = new Guid("6b1675bd-d745-4c9f-8a4f-e8ddf87943af"),
                            UserId = new Guid("69e35e08-b342-4fc2-b2b4-68ef0fd36bae")
                        },
                        new
                        {
                            Id = new Guid("0b550b2c-e118-4c40-a050-3829fb1798c4"),
                            PlayerType = 0,
                            TeamId = new Guid("6b1675bd-d745-4c9f-8a4f-e8ddf87943af"),
                            UserId = new Guid("69e35e08-b342-4fc2-b2b4-68ef0fd36bae")
                        },
                        new
                        {
                            Id = new Guid("c120771b-f5d9-4e0e-9f7a-a4722bd4e5f9"),
                            PlayerType = 0,
                            TeamId = new Guid("bffadcbc-66d6-483f-a4cb-bb40a0db68b7"),
                            UserId = new Guid("69e35e08-b342-4fc2-b2b4-68ef0fd36bae")
                        },
                        new
                        {
                            Id = new Guid("074797c3-e92a-4656-b6a2-7901e20317cb"),
                            PlayerType = 0,
                            TeamId = new Guid("bffadcbc-66d6-483f-a4cb-bb40a0db68b7"),
                            UserId = new Guid("69e35e08-b342-4fc2-b2b4-68ef0fd36bae")
                        },
                        new
                        {
                            Id = new Guid("4f2e63db-b58b-42ff-b53c-99e48283b8c8"),
                            PlayerType = 0,
                            TeamId = new Guid("b8f8d5e7-62e4-4bb4-bae6-40e4ff597414"),
                            UserId = new Guid("b11b3351-be60-48f5-b68d-44ad7074b02a")
                        },
                        new
                        {
                            Id = new Guid("b674e95b-24e3-4501-8979-643b01af12d9"),
                            PlayerType = 0,
                            TeamId = new Guid("b8f8d5e7-62e4-4bb4-bae6-40e4ff597414"),
                            UserId = new Guid("b11b3351-be60-48f5-b68d-44ad7074b02a")
                        },
                        new
                        {
                            Id = new Guid("524c0e48-df66-4319-ad63-73142f763a12"),
                            PlayerType = 0,
                            TeamId = new Guid("5b6d5f7c-8618-4d84-8869-484eb4b3efcc"),
                            UserId = new Guid("b11b3351-be60-48f5-b68d-44ad7074b02a")
                        },
                        new
                        {
                            Id = new Guid("b74f24cf-2bc9-4e5e-80c5-84b478aea831"),
                            PlayerType = 0,
                            TeamId = new Guid("5b6d5f7c-8618-4d84-8869-484eb4b3efcc"),
                            UserId = new Guid("b11b3351-be60-48f5-b68d-44ad7074b02a")
                        },
                        new
                        {
                            Id = new Guid("c4995480-4e0c-43f5-b9a1-3d03b06b2469"),
                            PlayerType = 0,
                            TeamId = new Guid("01ce99f8-f922-45c4-b3ab-2f41462207b1"),
                            UserId = new Guid("7ae9844b-96f2-489c-989a-9519eeec63fe")
                        },
                        new
                        {
                            Id = new Guid("c98b1724-35cc-4a0d-94b7-5f960075bbb6"),
                            PlayerType = 0,
                            TeamId = new Guid("01ce99f8-f922-45c4-b3ab-2f41462207b1"),
                            UserId = new Guid("7ae9844b-96f2-489c-989a-9519eeec63fe")
                        },
                        new
                        {
                            Id = new Guid("e4023260-ef85-4a6f-ab29-97301484d0a5"),
                            PlayerType = 0,
                            TeamId = new Guid("399e6797-4053-4ddc-beb0-f20a50c1e555"),
                            UserId = new Guid("7ae9844b-96f2-489c-989a-9519eeec63fe")
                        },
                        new
                        {
                            Id = new Guid("091fb1d4-6f20-459f-bb1e-ffb509a67a19"),
                            PlayerType = 0,
                            TeamId = new Guid("399e6797-4053-4ddc-beb0-f20a50c1e555"),
                            UserId = new Guid("7ae9844b-96f2-489c-989a-9519eeec63fe")
                        },
                        new
                        {
                            Id = new Guid("9c4cf6ba-66d6-4416-bd50-7648e8f099ce"),
                            PlayerType = 0,
                            TeamId = new Guid("e9674b0e-6d7e-4ac4-adf4-b693cc60f726"),
                            UserId = new Guid("f87f7bbf-bb5f-450a-9974-f441171e2cc8")
                        },
                        new
                        {
                            Id = new Guid("9ce24dd0-6ad2-4bbc-9d4f-093998680497"),
                            PlayerType = 0,
                            TeamId = new Guid("e9674b0e-6d7e-4ac4-adf4-b693cc60f726"),
                            UserId = new Guid("f87f7bbf-bb5f-450a-9974-f441171e2cc8")
                        },
                        new
                        {
                            Id = new Guid("8e4ff5e0-317d-440c-a77e-0cb865060c6c"),
                            PlayerType = 0,
                            TeamId = new Guid("fef73b7f-b197-4763-a2fe-1faebe8795c5"),
                            UserId = new Guid("f87f7bbf-bb5f-450a-9974-f441171e2cc8")
                        },
                        new
                        {
                            Id = new Guid("68156620-031e-436b-b067-0cc1490d44a3"),
                            PlayerType = 0,
                            TeamId = new Guid("fef73b7f-b197-4763-a2fe-1faebe8795c5"),
                            UserId = new Guid("f87f7bbf-bb5f-450a-9974-f441171e2cc8")
                        });
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.Tournament", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasEnded")
                        .HasColumnType("bit");

                    b.Property<bool>("HasStarted")
                        .HasColumnType("bit");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("TournamentPrize")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Tournament");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0553498d-b9e3-4a76-9b48-bd50edf7f815"),
                            CreatedAt = new DateTime(2021, 4, 29, 12, 13, 51, 782, DateTimeKind.Local).AddTicks(5015),
                            CreatedBy = new Guid("c084366b-51b4-4ee4-97c4-9ef163d64784"),
                            Description = "Sample description for A1 Grand Prix",
                            HasEnded = false,
                            HasStarted = false,
                            Place = "Los Angeles",
                            StartingDate = new DateTime(2021, 4, 30, 12, 13, 51, 780, DateTimeKind.Local).AddTicks(4956),
                            Title = "A1 Grand Prix",
                            TournamentPrize = 51167628f
                        },
                        new
                        {
                            Id = new Guid("7d2445cb-d274-488a-8c0e-41c73d6c8f31"),
                            CreatedAt = new DateTime(2021, 4, 29, 12, 13, 51, 784, DateTimeKind.Local).AddTicks(6865),
                            CreatedBy = new Guid("69e35e08-b342-4fc2-b2b4-68ef0fd36bae"),
                            Description = "Sample description for Formula One World Championship",
                            HasEnded = false,
                            HasStarted = false,
                            Place = "Los Angeles",
                            StartingDate = new DateTime(2021, 4, 29, 12, 13, 51, 784, DateTimeKind.Local).AddTicks(6799),
                            Title = "Formula One World Championship",
                            TournamentPrize = 904996f
                        },
                        new
                        {
                            Id = new Guid("40fc5578-4199-4d40-a0a7-db1d05817dfc"),
                            CreatedAt = new DateTime(2021, 4, 29, 12, 13, 51, 784, DateTimeKind.Local).AddTicks(7738),
                            CreatedBy = new Guid("b11b3351-be60-48f5-b68d-44ad7074b02a"),
                            Description = "Sample description for FIA World Endurance Championship",
                            HasEnded = false,
                            HasStarted = false,
                            Place = "Los Angeles",
                            StartingDate = new DateTime(2021, 5, 6, 12, 13, 51, 784, DateTimeKind.Local).AddTicks(7733),
                            Title = "FIA World Endurance Championship",
                            TournamentPrize = 32470934f
                        },
                        new
                        {
                            Id = new Guid("849a8d54-283c-4c8d-8a41-8deeb0333f51"),
                            CreatedAt = new DateTime(2021, 4, 29, 12, 13, 51, 784, DateTimeKind.Local).AddTicks(8241),
                            CreatedBy = new Guid("7ae9844b-96f2-489c-989a-9519eeec63fe"),
                            Description = "Sample description for FIA GT1 World Championship",
                            HasEnded = false,
                            HasStarted = false,
                            Place = "Los Angeles",
                            StartingDate = new DateTime(2021, 5, 7, 12, 13, 51, 784, DateTimeKind.Local).AddTicks(8236),
                            Title = "FIA GT1 World Championship",
                            TournamentPrize = 46769332f
                        },
                        new
                        {
                            Id = new Guid("12211770-08b6-485b-af05-1af514435f5e"),
                            CreatedAt = new DateTime(2021, 4, 29, 12, 13, 51, 784, DateTimeKind.Local).AddTicks(8857),
                            CreatedBy = new Guid("f87f7bbf-bb5f-450a-9974-f441171e2cc8"),
                            Description = "Sample description for World Gliding Championships",
                            HasEnded = false,
                            HasStarted = false,
                            Place = "Los Angeles",
                            StartingDate = new DateTime(2021, 5, 5, 12, 13, 51, 784, DateTimeKind.Local).AddTicks(8852),
                            Title = "World Gliding Championships",
                            TournamentPrize = 64506352f
                        });
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CoverUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cce5841e-5d75-41ae-95c7-9c69c13dfb70"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "JamesWilliam1@gmail.com",
                            FirstName = "James",
                            LastName = "William",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "JamesWilliam1"
                        },
                        new
                        {
                            Id = new Guid("c084366b-51b4-4ee4-97c4-9ef163d64784"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "JosephJames2@gmail.com",
                            FirstName = "Joseph",
                            LastName = "James",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "JosephJames2"
                        },
                        new
                        {
                            Id = new Guid("69e35e08-b342-4fc2-b2b4-68ef0fd36bae"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "JamesRobert3@gmail.com",
                            FirstName = "James",
                            LastName = "Robert",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "JamesRobert3"
                        },
                        new
                        {
                            Id = new Guid("b11b3351-be60-48f5-b68d-44ad7074b02a"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "RobertMichael4@gmail.com",
                            FirstName = "Robert",
                            LastName = "Michael",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "RobertMichael4"
                        },
                        new
                        {
                            Id = new Guid("7ae9844b-96f2-489c-989a-9519eeec63fe"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "JosephJames5@gmail.com",
                            FirstName = "Joseph",
                            LastName = "James",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "JosephJames5"
                        },
                        new
                        {
                            Id = new Guid("f87f7bbf-bb5f-450a-9974-f441171e2cc8"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "RobertDavid6@gmail.com",
                            FirstName = "Robert",
                            LastName = "David",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "RobertDavid6"
                        },
                        new
                        {
                            Id = new Guid("f02a6019-42b1-4c9c-a45e-0c73edb64530"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "ThomasThomas7@gmail.com",
                            FirstName = "Thomas",
                            LastName = "Thomas",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "ThomasThomas7"
                        },
                        new
                        {
                            Id = new Guid("352bd933-804a-488b-ac14-506e90ce4168"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "JosephJohn8@gmail.com",
                            FirstName = "Joseph",
                            LastName = "John",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "JosephJohn8"
                        },
                        new
                        {
                            Id = new Guid("dca0a285-7224-4c33-92b3-3369d291ce18"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "RichardCharles9@gmail.com",
                            FirstName = "Richard",
                            LastName = "Charles",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "RichardCharles9"
                        },
                        new
                        {
                            Id = new Guid("8c6b2a1e-0cf4-4175-8d94-54cddfd04a8e"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "DavidJohn10@gmail.com",
                            FirstName = "David",
                            LastName = "John",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "DavidJohn10"
                        },
                        new
                        {
                            Id = new Guid("f1002f1c-17b2-43ee-b282-073d6b6a062b"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "JohnDavid11@gmail.com",
                            FirstName = "John",
                            LastName = "David",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "JohnDavid11"
                        },
                        new
                        {
                            Id = new Guid("6c74d4e1-ffec-4d99-bf5e-4f15e45659d4"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "JohnRichard12@gmail.com",
                            FirstName = "John",
                            LastName = "Richard",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "JohnRichard12"
                        },
                        new
                        {
                            Id = new Guid("781cfc43-ca09-4dd9-a371-e9a24ab68f0d"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "MichaelThomas13@gmail.com",
                            FirstName = "Michael",
                            LastName = "Thomas",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "MichaelThomas13"
                        },
                        new
                        {
                            Id = new Guid("f2e47e7c-f8fe-46ac-8b1c-c7a6b45c0597"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "JohnDavid14@gmail.com",
                            FirstName = "John",
                            LastName = "David",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "JohnDavid14"
                        },
                        new
                        {
                            Id = new Guid("0222530e-7796-4a43-b94e-cac0d84836b1"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "DavidRobert15@gmail.com",
                            FirstName = "David",
                            LastName = "Robert",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "DavidRobert15"
                        },
                        new
                        {
                            Id = new Guid("cfeb5e80-921a-4d93-b67e-6843360d6227"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "RichardJohn16@gmail.com",
                            FirstName = "Richard",
                            LastName = "John",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "RichardJohn16"
                        },
                        new
                        {
                            Id = new Guid("b49c6427-3495-48e5-9575-f50d5f6be1b6"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "ThomasWilliam17@gmail.com",
                            FirstName = "Thomas",
                            LastName = "William",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "ThomasWilliam17"
                        },
                        new
                        {
                            Id = new Guid("ad43917f-4e01-4841-b123-c5fe21e617ee"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "ThomasJoseph18@gmail.com",
                            FirstName = "Thomas",
                            LastName = "Joseph",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "ThomasJoseph18"
                        },
                        new
                        {
                            Id = new Guid("68abee57-1228-419d-9b6a-c48d1cdd84a4"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "DavidWilliam19@gmail.com",
                            FirstName = "David",
                            LastName = "William",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "DavidWilliam19"
                        });
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.Bidding", b =>
                {
                    b.HasOne("BarelyGambling.Core.Entity.Team", null)
                        .WithMany("Biddings")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BarelyGambling.Core.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.Team", b =>
                {
                    b.HasOne("BarelyGambling.Core.Entity.Tournament", "Tournament")
                        .WithMany("Teams")
                        .HasForeignKey("TournamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.TeamMember", b =>
                {
                    b.HasOne("BarelyGambling.Core.Entity.Team", null)
                        .WithMany("TeamMembers")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BarelyGambling.Core.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.Tournament", b =>
                {
                    b.HasOne("BarelyGambling.Core.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
