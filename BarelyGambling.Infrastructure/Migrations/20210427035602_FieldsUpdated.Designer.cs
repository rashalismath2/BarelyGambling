// <auto-generated />
using System;
using BarelyGambling.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BarelyGambling.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210427035602_FieldsUpdated")]
    partial class FieldsUpdated
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BarelyGambling.Core.Entity.Bidding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<Guid?>("TeamId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TeamId1");

                    b.HasIndex("UserId");

                    b.ToTable("Bidding");
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("BiddingRestrictedTos")
                        .HasColumnType("real");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.Property<Guid>("TournamentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Won")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("TournamentId");

                    b.ToTable("Team");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8dd2ba56-330f-4bbc-93f6-5cfcdf941693"),
                            BiddingRestrictedTos = 0f,
                            Description = "Sample description for A1 Grand Prix Team 1",
                            Title = "A1 Grand Prix Team 1",
                            Total = 0f,
                            TournamentId = new Guid("0968563a-6a71-4996-a1ac-90f8f2d2aef9"),
                            Won = true
                        },
                        new
                        {
                            Id = new Guid("140f5997-3039-4514-a372-64689553ca98"),
                            BiddingRestrictedTos = 0f,
                            Description = "Sample description for A1 Grand Prix Team 2",
                            Title = "A1 Grand Prix Team 2",
                            Total = 0f,
                            TournamentId = new Guid("0968563a-6a71-4996-a1ac-90f8f2d2aef9"),
                            Won = false
                        },
                        new
                        {
                            Id = new Guid("7d820849-f2ea-4868-9651-cfa5f572c033"),
                            BiddingRestrictedTos = 0f,
                            Description = "Sample description for Formula One World Championship Team 1",
                            Title = "Formula One World Championship Team 1",
                            Total = 0f,
                            TournamentId = new Guid("a9ae134a-1ca6-4f5f-9c76-5d33c8985333"),
                            Won = true
                        },
                        new
                        {
                            Id = new Guid("04e68cf6-362c-4ca1-afad-df04e78a2a68"),
                            BiddingRestrictedTos = 0f,
                            Description = "Sample description for Formula One World Championship Team 2",
                            Title = "Formula One World Championship Team 2",
                            Total = 0f,
                            TournamentId = new Guid("a9ae134a-1ca6-4f5f-9c76-5d33c8985333"),
                            Won = false
                        },
                        new
                        {
                            Id = new Guid("de28135e-cd70-45cd-8e75-457887734fa6"),
                            BiddingRestrictedTos = 0f,
                            Description = "Sample description for FIA World Endurance Championship Team 1",
                            Title = "FIA World Endurance Championship Team 1",
                            Total = 0f,
                            TournamentId = new Guid("ffde6d03-c8ab-4bdb-9633-bb38dc9d35ab"),
                            Won = true
                        },
                        new
                        {
                            Id = new Guid("d4e1887b-f3ec-447b-8549-414f1f58413d"),
                            BiddingRestrictedTos = 0f,
                            Description = "Sample description for FIA World Endurance Championship Team 2",
                            Title = "FIA World Endurance Championship Team 2",
                            Total = 0f,
                            TournamentId = new Guid("ffde6d03-c8ab-4bdb-9633-bb38dc9d35ab"),
                            Won = false
                        },
                        new
                        {
                            Id = new Guid("240ac667-86d6-468a-bc68-2399a403f303"),
                            BiddingRestrictedTos = 0f,
                            Description = "Sample description for FIA GT1 World Championship Team 1",
                            Title = "FIA GT1 World Championship Team 1",
                            Total = 0f,
                            TournamentId = new Guid("ba35ced5-119f-4783-8f30-0c26b20b485f"),
                            Won = true
                        },
                        new
                        {
                            Id = new Guid("04f85a5e-b18f-4a6d-9003-db6bc46cc1e5"),
                            BiddingRestrictedTos = 0f,
                            Description = "Sample description for FIA GT1 World Championship Team 2",
                            Title = "FIA GT1 World Championship Team 2",
                            Total = 0f,
                            TournamentId = new Guid("ba35ced5-119f-4783-8f30-0c26b20b485f"),
                            Won = false
                        },
                        new
                        {
                            Id = new Guid("0ba6d288-ee95-4566-af36-53fecd6714e7"),
                            BiddingRestrictedTos = 0f,
                            Description = "Sample description for World Gliding Championships Team 1",
                            Title = "World Gliding Championships Team 1",
                            Total = 0f,
                            TournamentId = new Guid("77c19d35-9d55-4df0-aba8-1ed2ffee05f1"),
                            Won = true
                        },
                        new
                        {
                            Id = new Guid("cfce8c6c-3a10-43f9-929b-54911a48287c"),
                            BiddingRestrictedTos = 0f,
                            Description = "Sample description for World Gliding Championships Team 2",
                            Title = "World Gliding Championships Team 2",
                            Total = 0f,
                            TournamentId = new Guid("77c19d35-9d55-4df0-aba8-1ed2ffee05f1"),
                            Won = false
                        });
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.TeamMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserId1")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.HasIndex("UserId1");

                    b.ToTable("TeamMember");

                    b.HasData(
                        new
                        {
                            Id = new Guid("61d38af5-6392-4a7c-b6ae-bca604c5fd6f"),
                            TeamId = new Guid("8dd2ba56-330f-4bbc-93f6-5cfcdf941693"),
                            UserId = 1
                        },
                        new
                        {
                            Id = new Guid("8f513448-b3af-4b0c-9bf2-4346e29ddc14"),
                            TeamId = new Guid("8dd2ba56-330f-4bbc-93f6-5cfcdf941693"),
                            UserId = 1
                        },
                        new
                        {
                            Id = new Guid("008180c8-6745-41ab-851f-a44da3eea6d2"),
                            TeamId = new Guid("140f5997-3039-4514-a372-64689553ca98"),
                            UserId = 1
                        },
                        new
                        {
                            Id = new Guid("0f3e724a-0785-4c67-a846-f802ba4fa252"),
                            TeamId = new Guid("140f5997-3039-4514-a372-64689553ca98"),
                            UserId = 1
                        },
                        new
                        {
                            Id = new Guid("07a50dcf-96e9-47de-b393-d2ed44c3c13e"),
                            TeamId = new Guid("7d820849-f2ea-4868-9651-cfa5f572c033"),
                            UserId = 2
                        },
                        new
                        {
                            Id = new Guid("2be07827-c9a6-4e60-9c9b-550fc5e9904b"),
                            TeamId = new Guid("7d820849-f2ea-4868-9651-cfa5f572c033"),
                            UserId = 2
                        },
                        new
                        {
                            Id = new Guid("cf1555dd-4b5b-4a4a-ba39-ec5289ba20e3"),
                            TeamId = new Guid("04e68cf6-362c-4ca1-afad-df04e78a2a68"),
                            UserId = 2
                        },
                        new
                        {
                            Id = new Guid("bff95abb-110d-4dc8-8872-724754dcf66f"),
                            TeamId = new Guid("04e68cf6-362c-4ca1-afad-df04e78a2a68"),
                            UserId = 2
                        },
                        new
                        {
                            Id = new Guid("773fcc3c-d53a-45f9-8a52-5facfec298e8"),
                            TeamId = new Guid("de28135e-cd70-45cd-8e75-457887734fa6"),
                            UserId = 3
                        },
                        new
                        {
                            Id = new Guid("f38a31c8-bf07-4e2e-b2be-ac218a5acb65"),
                            TeamId = new Guid("de28135e-cd70-45cd-8e75-457887734fa6"),
                            UserId = 3
                        },
                        new
                        {
                            Id = new Guid("17bb9d03-1b22-49c5-83b0-ef89556e3aeb"),
                            TeamId = new Guid("d4e1887b-f3ec-447b-8549-414f1f58413d"),
                            UserId = 3
                        },
                        new
                        {
                            Id = new Guid("c386aa1b-d1ed-4b5c-8591-99305b30cb59"),
                            TeamId = new Guid("d4e1887b-f3ec-447b-8549-414f1f58413d"),
                            UserId = 3
                        },
                        new
                        {
                            Id = new Guid("992cfb77-8dec-497b-b2bf-e1cb1aae20a7"),
                            TeamId = new Guid("240ac667-86d6-468a-bc68-2399a403f303"),
                            UserId = 4
                        },
                        new
                        {
                            Id = new Guid("1e07e601-22d2-4872-90ae-267297a210e3"),
                            TeamId = new Guid("240ac667-86d6-468a-bc68-2399a403f303"),
                            UserId = 4
                        },
                        new
                        {
                            Id = new Guid("1a311658-f5d9-495e-866c-c41c6525b231"),
                            TeamId = new Guid("04f85a5e-b18f-4a6d-9003-db6bc46cc1e5"),
                            UserId = 4
                        },
                        new
                        {
                            Id = new Guid("337b1fe9-4cf1-4850-acff-2e9a50e20178"),
                            TeamId = new Guid("04f85a5e-b18f-4a6d-9003-db6bc46cc1e5"),
                            UserId = 4
                        },
                        new
                        {
                            Id = new Guid("f960510a-5437-4387-bfb1-9f3dd8b7dc0d"),
                            TeamId = new Guid("0ba6d288-ee95-4566-af36-53fecd6714e7"),
                            UserId = 5
                        },
                        new
                        {
                            Id = new Guid("6ac1ed0f-9254-4b35-a69b-1f7132d108f1"),
                            TeamId = new Guid("0ba6d288-ee95-4566-af36-53fecd6714e7"),
                            UserId = 5
                        },
                        new
                        {
                            Id = new Guid("cc160837-5662-45d8-9fa9-8c36c0ae3331"),
                            TeamId = new Guid("cfce8c6c-3a10-43f9-929b-54911a48287c"),
                            UserId = 5
                        },
                        new
                        {
                            Id = new Guid("6ee529da-7683-4c52-a498-b49e9b8c249b"),
                            TeamId = new Guid("cfce8c6c-3a10-43f9-929b-54911a48287c"),
                            UserId = 5
                        });
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.Tournament", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("TournamentPrize")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Tournament");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0968563a-6a71-4996-a1ac-90f8f2d2aef9"),
                            CreatedBy = new Guid("94c0db61-8a44-452e-a833-c230b15f0d5c"),
                            Description = "Sample description for A1 Grand Prix",
                            StartingDate = new DateTime(2021, 4, 29, 9, 26, 0, 66, DateTimeKind.Local).AddTicks(2986),
                            Title = "A1 Grand Prix",
                            TournamentPrize = 86383770f
                        },
                        new
                        {
                            Id = new Guid("a9ae134a-1ca6-4f5f-9c76-5d33c8985333"),
                            CreatedBy = new Guid("ff3be9d5-01d3-4969-a21c-068d4358c79e"),
                            Description = "Sample description for Formula One World Championship",
                            StartingDate = new DateTime(2021, 5, 2, 9, 26, 0, 73, DateTimeKind.Local).AddTicks(7184),
                            Title = "Formula One World Championship",
                            TournamentPrize = 16369940f
                        },
                        new
                        {
                            Id = new Guid("ffde6d03-c8ab-4bdb-9633-bb38dc9d35ab"),
                            CreatedBy = new Guid("0dc4c235-45dc-46f0-a65a-57c15eeac838"),
                            Description = "Sample description for FIA World Endurance Championship",
                            StartingDate = new DateTime(2021, 5, 5, 9, 26, 0, 73, DateTimeKind.Local).AddTicks(8303),
                            Title = "FIA World Endurance Championship",
                            TournamentPrize = 18019016f
                        },
                        new
                        {
                            Id = new Guid("ba35ced5-119f-4783-8f30-0c26b20b485f"),
                            CreatedBy = new Guid("3a2f9a41-3d1a-46f5-9fe1-5ad80a52e2ac"),
                            Description = "Sample description for FIA GT1 World Championship",
                            StartingDate = new DateTime(2021, 4, 27, 9, 26, 0, 73, DateTimeKind.Local).AddTicks(9093),
                            Title = "FIA GT1 World Championship",
                            TournamentPrize = 81090480f
                        },
                        new
                        {
                            Id = new Guid("77c19d35-9d55-4df0-aba8-1ed2ffee05f1"),
                            CreatedBy = new Guid("b0b7f05d-3192-46a9-8cad-8d10f581d09b"),
                            Description = "Sample description for World Gliding Championships",
                            StartingDate = new DateTime(2021, 4, 30, 9, 26, 0, 73, DateTimeKind.Local).AddTicks(9848),
                            Title = "World Gliding Championships",
                            TournamentPrize = 89821056f
                        });
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d1ffe0a2-1778-42d4-a6f6-7d2537653815"),
                            Email = "MichaelRobert1@gmail.com",
                            FirstName = "Michael",
                            LastName = "Robert",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "MichaelRobert1"
                        },
                        new
                        {
                            Id = new Guid("94c0db61-8a44-452e-a833-c230b15f0d5c"),
                            Email = "JohnCharles2@gmail.com",
                            FirstName = "John",
                            LastName = "Charles",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "JohnCharles2"
                        },
                        new
                        {
                            Id = new Guid("ff3be9d5-01d3-4969-a21c-068d4358c79e"),
                            Email = "JamesJoseph3@gmail.com",
                            FirstName = "James",
                            LastName = "Joseph",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "JamesJoseph3"
                        },
                        new
                        {
                            Id = new Guid("0dc4c235-45dc-46f0-a65a-57c15eeac838"),
                            Email = "ThomasCharles4@gmail.com",
                            FirstName = "Thomas",
                            LastName = "Charles",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "ThomasCharles4"
                        },
                        new
                        {
                            Id = new Guid("3a2f9a41-3d1a-46f5-9fe1-5ad80a52e2ac"),
                            Email = "JohnThomas5@gmail.com",
                            FirstName = "John",
                            LastName = "Thomas",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "JohnThomas5"
                        },
                        new
                        {
                            Id = new Guid("b0b7f05d-3192-46a9-8cad-8d10f581d09b"),
                            Email = "JamesRobert6@gmail.com",
                            FirstName = "James",
                            LastName = "Robert",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "JamesRobert6"
                        },
                        new
                        {
                            Id = new Guid("f9158170-f47e-4e15-9573-d1a00bc9aecd"),
                            Email = "CharlesJohn7@gmail.com",
                            FirstName = "Charles",
                            LastName = "John",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "CharlesJohn7"
                        },
                        new
                        {
                            Id = new Guid("aa675a3c-d960-4e81-ac89-3fb567d40108"),
                            Email = "ThomasDavid8@gmail.com",
                            FirstName = "Thomas",
                            LastName = "David",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "ThomasDavid8"
                        },
                        new
                        {
                            Id = new Guid("c7f55bbb-351d-4b09-8010-3bb4526ddf75"),
                            Email = "WilliamCharles9@gmail.com",
                            FirstName = "William",
                            LastName = "Charles",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "WilliamCharles9"
                        },
                        new
                        {
                            Id = new Guid("349e1e79-9a86-4a05-92d3-7aa67bc28f8c"),
                            Email = "WilliamJoseph10@gmail.com",
                            FirstName = "William",
                            LastName = "Joseph",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "WilliamJoseph10"
                        },
                        new
                        {
                            Id = new Guid("5b780ead-9753-47f5-9236-bde7321e918b"),
                            Email = "JosephMichael11@gmail.com",
                            FirstName = "Joseph",
                            LastName = "Michael",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "JosephMichael11"
                        },
                        new
                        {
                            Id = new Guid("4e39ae3c-00c9-4bee-a308-8e76f87eb7eb"),
                            Email = "JosephRobert12@gmail.com",
                            FirstName = "Joseph",
                            LastName = "Robert",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "JosephRobert12"
                        },
                        new
                        {
                            Id = new Guid("3d9430e4-d038-4742-bc2f-cdedd68b8669"),
                            Email = "RobertJames13@gmail.com",
                            FirstName = "Robert",
                            LastName = "James",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "RobertJames13"
                        },
                        new
                        {
                            Id = new Guid("87094c13-483e-4b79-ae67-b7d27690ac81"),
                            Email = "MichaelThomas14@gmail.com",
                            FirstName = "Michael",
                            LastName = "Thomas",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "MichaelThomas14"
                        },
                        new
                        {
                            Id = new Guid("72442de3-bff7-41d7-9ee2-efd861397fb0"),
                            Email = "RobertJoseph15@gmail.com",
                            FirstName = "Robert",
                            LastName = "Joseph",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "RobertJoseph15"
                        },
                        new
                        {
                            Id = new Guid("0b9c2287-e27f-447f-bd88-cd59973aa78e"),
                            Email = "WilliamDavid16@gmail.com",
                            FirstName = "William",
                            LastName = "David",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "WilliamDavid16"
                        },
                        new
                        {
                            Id = new Guid("4d6b3804-cfb4-43c7-9020-abf7f6b8a7fd"),
                            Email = "CharlesRobert17@gmail.com",
                            FirstName = "Charles",
                            LastName = "Robert",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "CharlesRobert17"
                        },
                        new
                        {
                            Id = new Guid("5148d808-ab0c-468b-a350-1f96c4ae4efb"),
                            Email = "RichardRichard18@gmail.com",
                            FirstName = "Richard",
                            LastName = "Richard",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "RichardRichard18"
                        },
                        new
                        {
                            Id = new Guid("10f42cb4-fff0-467a-9b95-a28e836d71f6"),
                            Email = "RichardRobert19@gmail.com",
                            FirstName = "Richard",
                            LastName = "Robert",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "RichardRobert19"
                        });
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.Bidding", b =>
                {
                    b.HasOne("BarelyGambling.Core.Entity.Team", "Team")
                        .WithMany("Biddings")
                        .HasForeignKey("TeamId1");

                    b.HasOne("BarelyGambling.Core.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.Team", b =>
                {
                    b.HasOne("BarelyGambling.Core.Entity.Tournament", "Tournament")
                        .WithMany("Teams")
                        .HasForeignKey("TournamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.TeamMember", b =>
                {
                    b.HasOne("BarelyGambling.Core.Entity.Team", "Team")
                        .WithMany("TeamMembers")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BarelyGambling.Core.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId1");
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.Tournament", b =>
                {
                    b.HasOne("BarelyGambling.Core.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
