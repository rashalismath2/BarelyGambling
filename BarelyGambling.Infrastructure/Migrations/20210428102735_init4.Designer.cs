// <auto-generated />
using System;
using BarelyGambling.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BarelyGambling.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210428102735_init4")]
    partial class init4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BarelyGambling.Core.Entity.Bidding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.HasIndex("UserId");

                    b.ToTable("Bidding");
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("BiddingRestrictedTos")
                        .HasColumnType("real");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.Property<Guid>("TournamentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Won")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("TournamentId");

                    b.ToTable("Team");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c8219028-403c-4fd5-94b9-4fd70d03b27f"),
                            BiddingRestrictedTos = 0f,
                            Description = "Sample description for A1 Grand Prix Team 1",
                            Title = "A1 Grand Prix Team 1",
                            Total = 0f,
                            TournamentId = new Guid("7f1d17ca-1e52-4bd8-8b4a-d81eb0e9f82a"),
                            Won = true
                        },
                        new
                        {
                            Id = new Guid("1b01f190-21c0-4dd4-bbea-9925c7b5f6e6"),
                            BiddingRestrictedTos = 0f,
                            Description = "Sample description for A1 Grand Prix Team 2",
                            Title = "A1 Grand Prix Team 2",
                            Total = 0f,
                            TournamentId = new Guid("7f1d17ca-1e52-4bd8-8b4a-d81eb0e9f82a"),
                            Won = false
                        },
                        new
                        {
                            Id = new Guid("fe91e66d-d2d8-4162-bba5-9e96da4518e3"),
                            BiddingRestrictedTos = 0f,
                            Description = "Sample description for Formula One World Championship Team 1",
                            Title = "Formula One World Championship Team 1",
                            Total = 0f,
                            TournamentId = new Guid("e4ccba94-bafd-40e2-bd32-06024a39b666"),
                            Won = true
                        },
                        new
                        {
                            Id = new Guid("1708dd0b-5aae-4c7f-a048-8c1a25edbbd6"),
                            BiddingRestrictedTos = 0f,
                            Description = "Sample description for Formula One World Championship Team 2",
                            Title = "Formula One World Championship Team 2",
                            Total = 0f,
                            TournamentId = new Guid("e4ccba94-bafd-40e2-bd32-06024a39b666"),
                            Won = false
                        },
                        new
                        {
                            Id = new Guid("82c52b3b-73cb-463a-b9d1-796db480de68"),
                            BiddingRestrictedTos = 0f,
                            Description = "Sample description for FIA World Endurance Championship Team 1",
                            Title = "FIA World Endurance Championship Team 1",
                            Total = 0f,
                            TournamentId = new Guid("be602a77-3e60-4dd8-b7df-05fcaded346c"),
                            Won = true
                        },
                        new
                        {
                            Id = new Guid("c4f882ff-3874-41f5-8cfa-9e153b77813e"),
                            BiddingRestrictedTos = 0f,
                            Description = "Sample description for FIA World Endurance Championship Team 2",
                            Title = "FIA World Endurance Championship Team 2",
                            Total = 0f,
                            TournamentId = new Guid("be602a77-3e60-4dd8-b7df-05fcaded346c"),
                            Won = false
                        },
                        new
                        {
                            Id = new Guid("78ecced3-cd1f-49c1-9d7a-76f9cf673526"),
                            BiddingRestrictedTos = 0f,
                            Description = "Sample description for FIA GT1 World Championship Team 1",
                            Title = "FIA GT1 World Championship Team 1",
                            Total = 0f,
                            TournamentId = new Guid("855265fb-11bb-4674-8e1b-733809aaa864"),
                            Won = true
                        },
                        new
                        {
                            Id = new Guid("3597d6a8-c894-4cf2-9339-1d4579f55a46"),
                            BiddingRestrictedTos = 0f,
                            Description = "Sample description for FIA GT1 World Championship Team 2",
                            Title = "FIA GT1 World Championship Team 2",
                            Total = 0f,
                            TournamentId = new Guid("855265fb-11bb-4674-8e1b-733809aaa864"),
                            Won = false
                        },
                        new
                        {
                            Id = new Guid("ea875d07-1f2d-4cf7-8c03-853951b707a7"),
                            BiddingRestrictedTos = 0f,
                            Description = "Sample description for World Gliding Championships Team 1",
                            Title = "World Gliding Championships Team 1",
                            Total = 0f,
                            TournamentId = new Guid("497403c9-664d-424a-b382-97b1d1e16eb7"),
                            Won = true
                        },
                        new
                        {
                            Id = new Guid("43b093b2-5b46-4231-8108-6891cd9ad3a7"),
                            BiddingRestrictedTos = 0f,
                            Description = "Sample description for World Gliding Championships Team 2",
                            Title = "World Gliding Championships Team 2",
                            Total = 0f,
                            TournamentId = new Guid("497403c9-664d-424a-b382-97b1d1e16eb7"),
                            Won = false
                        });
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.TeamMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PlayerType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.HasIndex("UserId");

                    b.ToTable("TeamMember");

                    b.HasData(
                        new
                        {
                            Id = new Guid("865ee35a-69e8-4504-a348-41454ed8c966"),
                            PlayerType = 0,
                            TeamId = new Guid("c8219028-403c-4fd5-94b9-4fd70d03b27f"),
                            UserId = new Guid("e141319b-7f62-4974-b8f2-4d9c33eae162")
                        },
                        new
                        {
                            Id = new Guid("1b59dfd1-8b73-4c31-b40b-ce03527aabde"),
                            PlayerType = 0,
                            TeamId = new Guid("c8219028-403c-4fd5-94b9-4fd70d03b27f"),
                            UserId = new Guid("e141319b-7f62-4974-b8f2-4d9c33eae162")
                        },
                        new
                        {
                            Id = new Guid("e6c715e2-2fca-4506-9595-12d012a50385"),
                            PlayerType = 0,
                            TeamId = new Guid("1b01f190-21c0-4dd4-bbea-9925c7b5f6e6"),
                            UserId = new Guid("e141319b-7f62-4974-b8f2-4d9c33eae162")
                        },
                        new
                        {
                            Id = new Guid("5c24f5b0-83c7-49e5-867c-0a3798a08ff2"),
                            PlayerType = 0,
                            TeamId = new Guid("1b01f190-21c0-4dd4-bbea-9925c7b5f6e6"),
                            UserId = new Guid("e141319b-7f62-4974-b8f2-4d9c33eae162")
                        },
                        new
                        {
                            Id = new Guid("21bb6c70-9f65-4a70-8dd5-3074093aa664"),
                            PlayerType = 0,
                            TeamId = new Guid("fe91e66d-d2d8-4162-bba5-9e96da4518e3"),
                            UserId = new Guid("13fd7506-ff7f-4902-8310-3a27d44c74a0")
                        },
                        new
                        {
                            Id = new Guid("1e7d775f-ddc6-4ee5-b6c4-0ea352ca18e8"),
                            PlayerType = 0,
                            TeamId = new Guid("fe91e66d-d2d8-4162-bba5-9e96da4518e3"),
                            UserId = new Guid("13fd7506-ff7f-4902-8310-3a27d44c74a0")
                        },
                        new
                        {
                            Id = new Guid("1ff31e15-6643-4183-bd76-348fe86def26"),
                            PlayerType = 0,
                            TeamId = new Guid("1708dd0b-5aae-4c7f-a048-8c1a25edbbd6"),
                            UserId = new Guid("13fd7506-ff7f-4902-8310-3a27d44c74a0")
                        },
                        new
                        {
                            Id = new Guid("66986791-33b2-464b-a913-31f704e3f57b"),
                            PlayerType = 0,
                            TeamId = new Guid("1708dd0b-5aae-4c7f-a048-8c1a25edbbd6"),
                            UserId = new Guid("13fd7506-ff7f-4902-8310-3a27d44c74a0")
                        },
                        new
                        {
                            Id = new Guid("5396afde-1a2a-4e00-a210-c0eadd90e7a2"),
                            PlayerType = 0,
                            TeamId = new Guid("82c52b3b-73cb-463a-b9d1-796db480de68"),
                            UserId = new Guid("2964fbe5-ae9a-4d00-b757-be056ca41efc")
                        },
                        new
                        {
                            Id = new Guid("7efd119c-8f29-4489-8836-5d0af5140dfa"),
                            PlayerType = 0,
                            TeamId = new Guid("82c52b3b-73cb-463a-b9d1-796db480de68"),
                            UserId = new Guid("2964fbe5-ae9a-4d00-b757-be056ca41efc")
                        },
                        new
                        {
                            Id = new Guid("693be519-2164-4a0b-8aca-2765eedf1b2b"),
                            PlayerType = 0,
                            TeamId = new Guid("c4f882ff-3874-41f5-8cfa-9e153b77813e"),
                            UserId = new Guid("2964fbe5-ae9a-4d00-b757-be056ca41efc")
                        },
                        new
                        {
                            Id = new Guid("4f99011d-97a7-454d-90e0-d8759228de76"),
                            PlayerType = 0,
                            TeamId = new Guid("c4f882ff-3874-41f5-8cfa-9e153b77813e"),
                            UserId = new Guid("2964fbe5-ae9a-4d00-b757-be056ca41efc")
                        },
                        new
                        {
                            Id = new Guid("52cc2357-528e-4619-884f-1a7a39451215"),
                            PlayerType = 0,
                            TeamId = new Guid("78ecced3-cd1f-49c1-9d7a-76f9cf673526"),
                            UserId = new Guid("052da1f0-5390-408c-95bb-a66471ca209f")
                        },
                        new
                        {
                            Id = new Guid("7486556a-5e42-43d4-8506-041ebd67ab7c"),
                            PlayerType = 0,
                            TeamId = new Guid("78ecced3-cd1f-49c1-9d7a-76f9cf673526"),
                            UserId = new Guid("052da1f0-5390-408c-95bb-a66471ca209f")
                        },
                        new
                        {
                            Id = new Guid("11c50e8a-2a2c-4878-acfb-eddda95463da"),
                            PlayerType = 0,
                            TeamId = new Guid("3597d6a8-c894-4cf2-9339-1d4579f55a46"),
                            UserId = new Guid("052da1f0-5390-408c-95bb-a66471ca209f")
                        },
                        new
                        {
                            Id = new Guid("554edbdf-37ad-43da-9400-b86f4df8b47f"),
                            PlayerType = 0,
                            TeamId = new Guid("3597d6a8-c894-4cf2-9339-1d4579f55a46"),
                            UserId = new Guid("052da1f0-5390-408c-95bb-a66471ca209f")
                        },
                        new
                        {
                            Id = new Guid("f2c959cf-e722-4fbe-b1c8-ce711744cd6a"),
                            PlayerType = 0,
                            TeamId = new Guid("ea875d07-1f2d-4cf7-8c03-853951b707a7"),
                            UserId = new Guid("db6d5a9a-8fc7-4360-8ada-699af03aa84d")
                        },
                        new
                        {
                            Id = new Guid("1768f985-1927-4733-8c8f-de6f7b8d1651"),
                            PlayerType = 0,
                            TeamId = new Guid("ea875d07-1f2d-4cf7-8c03-853951b707a7"),
                            UserId = new Guid("db6d5a9a-8fc7-4360-8ada-699af03aa84d")
                        },
                        new
                        {
                            Id = new Guid("e5386410-eefa-4cf7-bef5-48c1be69a6d9"),
                            PlayerType = 0,
                            TeamId = new Guid("43b093b2-5b46-4231-8108-6891cd9ad3a7"),
                            UserId = new Guid("db6d5a9a-8fc7-4360-8ada-699af03aa84d")
                        },
                        new
                        {
                            Id = new Guid("01618232-9216-473f-8271-0dab60419d79"),
                            PlayerType = 0,
                            TeamId = new Guid("43b093b2-5b46-4231-8108-6891cd9ad3a7"),
                            UserId = new Guid("db6d5a9a-8fc7-4360-8ada-699af03aa84d")
                        });
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.Tournament", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("TournamentPrize")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Tournament");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7f1d17ca-1e52-4bd8-8b4a-d81eb0e9f82a"),
                            CreatedAt = new DateTime(2021, 4, 28, 15, 57, 33, 945, DateTimeKind.Local).AddTicks(8106),
                            CreatedBy = new Guid("e141319b-7f62-4974-b8f2-4d9c33eae162"),
                            Description = "Sample description for A1 Grand Prix",
                            Place = "Los Angeles",
                            StartingDate = new DateTime(2021, 4, 28, 15, 57, 33, 942, DateTimeKind.Local).AddTicks(8548),
                            Title = "A1 Grand Prix",
                            TournamentPrize = 75350750f
                        },
                        new
                        {
                            Id = new Guid("e4ccba94-bafd-40e2-bd32-06024a39b666"),
                            CreatedAt = new DateTime(2021, 4, 28, 15, 57, 33, 949, DateTimeKind.Local).AddTicks(569),
                            CreatedBy = new Guid("13fd7506-ff7f-4902-8310-3a27d44c74a0"),
                            Description = "Sample description for Formula One World Championship",
                            Place = "Los Angeles",
                            StartingDate = new DateTime(2021, 5, 2, 15, 57, 33, 949, DateTimeKind.Local).AddTicks(482),
                            Title = "Formula One World Championship",
                            TournamentPrize = 16688204f
                        },
                        new
                        {
                            Id = new Guid("be602a77-3e60-4dd8-b7df-05fcaded346c"),
                            CreatedAt = new DateTime(2021, 4, 28, 15, 57, 33, 949, DateTimeKind.Local).AddTicks(1467),
                            CreatedBy = new Guid("2964fbe5-ae9a-4d00-b757-be056ca41efc"),
                            Description = "Sample description for FIA World Endurance Championship",
                            Place = "Los Angeles",
                            StartingDate = new DateTime(2021, 4, 30, 15, 57, 33, 949, DateTimeKind.Local).AddTicks(1457),
                            Title = "FIA World Endurance Championship",
                            TournamentPrize = 47655380f
                        },
                        new
                        {
                            Id = new Guid("855265fb-11bb-4674-8e1b-733809aaa864"),
                            CreatedAt = new DateTime(2021, 4, 28, 15, 57, 33, 949, DateTimeKind.Local).AddTicks(2591),
                            CreatedBy = new Guid("052da1f0-5390-408c-95bb-a66471ca209f"),
                            Description = "Sample description for FIA GT1 World Championship",
                            Place = "Los Angeles",
                            StartingDate = new DateTime(2021, 5, 6, 15, 57, 33, 949, DateTimeKind.Local).AddTicks(2585),
                            Title = "FIA GT1 World Championship",
                            TournamentPrize = 77526344f
                        },
                        new
                        {
                            Id = new Guid("497403c9-664d-424a-b382-97b1d1e16eb7"),
                            CreatedAt = new DateTime(2021, 4, 28, 15, 57, 33, 949, DateTimeKind.Local).AddTicks(3350),
                            CreatedBy = new Guid("db6d5a9a-8fc7-4360-8ada-699af03aa84d"),
                            Description = "Sample description for World Gliding Championships",
                            Place = "Los Angeles",
                            StartingDate = new DateTime(2021, 5, 5, 15, 57, 33, 949, DateTimeKind.Local).AddTicks(3345),
                            Title = "World Gliding Championships",
                            TournamentPrize = 81154784f
                        });
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CoverUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("03aa921d-d36b-4ee8-bfed-bed738f91b26"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "CharlesMichael1@gmail.com",
                            FirstName = "Charles",
                            LastName = "Michael",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "CharlesMichael1"
                        },
                        new
                        {
                            Id = new Guid("e141319b-7f62-4974-b8f2-4d9c33eae162"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "JamesRichard2@gmail.com",
                            FirstName = "James",
                            LastName = "Richard",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "JamesRichard2"
                        },
                        new
                        {
                            Id = new Guid("13fd7506-ff7f-4902-8310-3a27d44c74a0"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "ThomasRobert3@gmail.com",
                            FirstName = "Thomas",
                            LastName = "Robert",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "ThomasRobert3"
                        },
                        new
                        {
                            Id = new Guid("2964fbe5-ae9a-4d00-b757-be056ca41efc"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "JohnDavid4@gmail.com",
                            FirstName = "John",
                            LastName = "David",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "JohnDavid4"
                        },
                        new
                        {
                            Id = new Guid("052da1f0-5390-408c-95bb-a66471ca209f"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "CharlesWilliam5@gmail.com",
                            FirstName = "Charles",
                            LastName = "William",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "CharlesWilliam5"
                        },
                        new
                        {
                            Id = new Guid("db6d5a9a-8fc7-4360-8ada-699af03aa84d"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "CharlesJames6@gmail.com",
                            FirstName = "Charles",
                            LastName = "James",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "CharlesJames6"
                        },
                        new
                        {
                            Id = new Guid("523c52d2-6ae1-4f9b-b16c-dc5e3bce9859"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "MichaelRobert7@gmail.com",
                            FirstName = "Michael",
                            LastName = "Robert",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "MichaelRobert7"
                        },
                        new
                        {
                            Id = new Guid("6b8c2a51-0102-4ee7-bbd4-c6bc92f72b3e"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "JamesJames8@gmail.com",
                            FirstName = "James",
                            LastName = "James",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "JamesJames8"
                        },
                        new
                        {
                            Id = new Guid("d54029f5-c4fd-449c-a599-d4e4b8de5c01"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "WilliamJoseph9@gmail.com",
                            FirstName = "William",
                            LastName = "Joseph",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "WilliamJoseph9"
                        },
                        new
                        {
                            Id = new Guid("bc77b2d0-a663-4807-8f9c-1c938aa0491c"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "WilliamWilliam10@gmail.com",
                            FirstName = "William",
                            LastName = "William",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "WilliamWilliam10"
                        },
                        new
                        {
                            Id = new Guid("bd228188-d31a-4d22-83b0-5e97aeeeff35"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "MichaelWilliam11@gmail.com",
                            FirstName = "Michael",
                            LastName = "William",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "MichaelWilliam11"
                        },
                        new
                        {
                            Id = new Guid("96a25485-f906-4ad2-912a-161ea8db4dc8"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "WilliamWilliam12@gmail.com",
                            FirstName = "William",
                            LastName = "William",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "WilliamWilliam12"
                        },
                        new
                        {
                            Id = new Guid("8c815f4f-5151-4b18-a836-823b50321e5a"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "ThomasJohn13@gmail.com",
                            FirstName = "Thomas",
                            LastName = "John",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "ThomasJohn13"
                        },
                        new
                        {
                            Id = new Guid("9b37a390-35db-4a54-8a4d-262df4259dc6"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "WilliamRichard14@gmail.com",
                            FirstName = "William",
                            LastName = "Richard",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "WilliamRichard14"
                        },
                        new
                        {
                            Id = new Guid("ce3a2fd5-054e-45d3-b864-a3f5ca8c8258"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "RichardDavid15@gmail.com",
                            FirstName = "Richard",
                            LastName = "David",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "RichardDavid15"
                        },
                        new
                        {
                            Id = new Guid("1b885697-b962-4942-a65e-0b85485e800b"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "DavidRobert16@gmail.com",
                            FirstName = "David",
                            LastName = "Robert",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "DavidRobert16"
                        },
                        new
                        {
                            Id = new Guid("313df234-6e70-4872-a491-2cc37d8dc19c"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "JamesRichard17@gmail.com",
                            FirstName = "James",
                            LastName = "Richard",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "JamesRichard17"
                        },
                        new
                        {
                            Id = new Guid("59a9cda9-6ef7-4eba-8200-f93ce4227149"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "MichaelJames18@gmail.com",
                            FirstName = "Michael",
                            LastName = "James",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "MichaelJames18"
                        },
                        new
                        {
                            Id = new Guid("f8e54924-912e-4dd4-9739-3109adc88860"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "RobertDavid19@gmail.com",
                            FirstName = "Robert",
                            LastName = "David",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "RobertDavid19"
                        });
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.Bidding", b =>
                {
                    b.HasOne("BarelyGambling.Core.Entity.Team", null)
                        .WithMany("Biddings")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BarelyGambling.Core.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.Team", b =>
                {
                    b.HasOne("BarelyGambling.Core.Entity.Tournament", "Tournament")
                        .WithMany("Teams")
                        .HasForeignKey("TournamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.TeamMember", b =>
                {
                    b.HasOne("BarelyGambling.Core.Entity.Team", null)
                        .WithMany("TeamMembers")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BarelyGambling.Core.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.Tournament", b =>
                {
                    b.HasOne("BarelyGambling.Core.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
