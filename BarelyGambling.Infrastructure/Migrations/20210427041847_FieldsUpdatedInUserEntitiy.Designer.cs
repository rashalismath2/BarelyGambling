// <auto-generated />
using System;
using BarelyGambling.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BarelyGambling.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210427041847_FieldsUpdatedInUserEntitiy")]
    partial class FieldsUpdatedInUserEntitiy
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BarelyGambling.Core.Entity.Bidding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<Guid?>("TeamId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TeamId1");

                    b.HasIndex("UserId");

                    b.ToTable("Bidding");
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("BiddingRestrictedTos")
                        .HasColumnType("real");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.Property<Guid>("TournamentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Won")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("TournamentId");

                    b.ToTable("Team");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f67d39db-3e04-4c24-818d-8e358b3f8786"),
                            BiddingRestrictedTos = 0f,
                            Description = "Sample description for A1 Grand Prix Team 1",
                            Title = "A1 Grand Prix Team 1",
                            Total = 0f,
                            TournamentId = new Guid("da71ed04-2b4b-4bed-8ad0-9b742a4a9fa1"),
                            Won = true
                        },
                        new
                        {
                            Id = new Guid("22af87ac-b36e-4389-9249-1cc4aa9bf02f"),
                            BiddingRestrictedTos = 0f,
                            Description = "Sample description for A1 Grand Prix Team 2",
                            Title = "A1 Grand Prix Team 2",
                            Total = 0f,
                            TournamentId = new Guid("da71ed04-2b4b-4bed-8ad0-9b742a4a9fa1"),
                            Won = false
                        },
                        new
                        {
                            Id = new Guid("19077fcf-c38e-4cf4-9bc1-4c85161ad194"),
                            BiddingRestrictedTos = 0f,
                            Description = "Sample description for Formula One World Championship Team 1",
                            Title = "Formula One World Championship Team 1",
                            Total = 0f,
                            TournamentId = new Guid("31a788d5-b94b-4b23-829c-834261e4fdf1"),
                            Won = true
                        },
                        new
                        {
                            Id = new Guid("ea8a730a-e25b-498a-b474-bab7f1da7d72"),
                            BiddingRestrictedTos = 0f,
                            Description = "Sample description for Formula One World Championship Team 2",
                            Title = "Formula One World Championship Team 2",
                            Total = 0f,
                            TournamentId = new Guid("31a788d5-b94b-4b23-829c-834261e4fdf1"),
                            Won = false
                        },
                        new
                        {
                            Id = new Guid("cd088880-e0ca-42f9-809f-903c2be6f11d"),
                            BiddingRestrictedTos = 0f,
                            Description = "Sample description for FIA World Endurance Championship Team 1",
                            Title = "FIA World Endurance Championship Team 1",
                            Total = 0f,
                            TournamentId = new Guid("88becec0-069c-4906-8904-48fb2cccd772"),
                            Won = true
                        },
                        new
                        {
                            Id = new Guid("62d71bd2-78ea-45c3-b494-b5d44d22fd13"),
                            BiddingRestrictedTos = 0f,
                            Description = "Sample description for FIA World Endurance Championship Team 2",
                            Title = "FIA World Endurance Championship Team 2",
                            Total = 0f,
                            TournamentId = new Guid("88becec0-069c-4906-8904-48fb2cccd772"),
                            Won = false
                        },
                        new
                        {
                            Id = new Guid("bc003f06-b716-4675-b212-3c4c84875cdb"),
                            BiddingRestrictedTos = 0f,
                            Description = "Sample description for FIA GT1 World Championship Team 1",
                            Title = "FIA GT1 World Championship Team 1",
                            Total = 0f,
                            TournamentId = new Guid("5296d521-dee2-4a05-bd9e-b1a0b0a2d7c2"),
                            Won = true
                        },
                        new
                        {
                            Id = new Guid("7c33a82b-d5c8-4b2b-935a-92799d38f239"),
                            BiddingRestrictedTos = 0f,
                            Description = "Sample description for FIA GT1 World Championship Team 2",
                            Title = "FIA GT1 World Championship Team 2",
                            Total = 0f,
                            TournamentId = new Guid("5296d521-dee2-4a05-bd9e-b1a0b0a2d7c2"),
                            Won = false
                        },
                        new
                        {
                            Id = new Guid("102203c4-4a49-4b0a-8254-ba540ec495bc"),
                            BiddingRestrictedTos = 0f,
                            Description = "Sample description for World Gliding Championships Team 1",
                            Title = "World Gliding Championships Team 1",
                            Total = 0f,
                            TournamentId = new Guid("58d2ef99-3c78-47db-9831-6e23a145fa35"),
                            Won = true
                        },
                        new
                        {
                            Id = new Guid("e7a404c1-32c2-4822-9dd2-6b12e786fa90"),
                            BiddingRestrictedTos = 0f,
                            Description = "Sample description for World Gliding Championships Team 2",
                            Title = "World Gliding Championships Team 2",
                            Total = 0f,
                            TournamentId = new Guid("58d2ef99-3c78-47db-9831-6e23a145fa35"),
                            Won = false
                        });
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.TeamMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserId1")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.HasIndex("UserId1");

                    b.ToTable("TeamMember");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1e42e981-b09e-49b8-a50d-a909a03e3d16"),
                            TeamId = new Guid("f67d39db-3e04-4c24-818d-8e358b3f8786"),
                            UserId = 1
                        },
                        new
                        {
                            Id = new Guid("44a172da-c389-4d8e-b92b-a01361f6c7fb"),
                            TeamId = new Guid("f67d39db-3e04-4c24-818d-8e358b3f8786"),
                            UserId = 1
                        },
                        new
                        {
                            Id = new Guid("5ee6fc19-02f6-4a94-b5a9-07cc14a28725"),
                            TeamId = new Guid("22af87ac-b36e-4389-9249-1cc4aa9bf02f"),
                            UserId = 1
                        },
                        new
                        {
                            Id = new Guid("0db974bc-249b-493b-8b8e-8480bb686880"),
                            TeamId = new Guid("22af87ac-b36e-4389-9249-1cc4aa9bf02f"),
                            UserId = 1
                        },
                        new
                        {
                            Id = new Guid("41f3e8e4-90d2-4419-9523-65966a7341b4"),
                            TeamId = new Guid("19077fcf-c38e-4cf4-9bc1-4c85161ad194"),
                            UserId = 2
                        },
                        new
                        {
                            Id = new Guid("6649eb95-87f2-4eaa-9fc4-d3af055f1221"),
                            TeamId = new Guid("19077fcf-c38e-4cf4-9bc1-4c85161ad194"),
                            UserId = 2
                        },
                        new
                        {
                            Id = new Guid("a9a81384-16b6-4555-9cd1-50f0fd0666c3"),
                            TeamId = new Guid("ea8a730a-e25b-498a-b474-bab7f1da7d72"),
                            UserId = 2
                        },
                        new
                        {
                            Id = new Guid("c687ce68-8429-4ef0-b3bd-0ad8e160351d"),
                            TeamId = new Guid("ea8a730a-e25b-498a-b474-bab7f1da7d72"),
                            UserId = 2
                        },
                        new
                        {
                            Id = new Guid("da9d98bf-2b60-4381-87de-91f2f3e67290"),
                            TeamId = new Guid("cd088880-e0ca-42f9-809f-903c2be6f11d"),
                            UserId = 3
                        },
                        new
                        {
                            Id = new Guid("497f1041-5742-4ab3-a274-f9fff9ca1cdc"),
                            TeamId = new Guid("cd088880-e0ca-42f9-809f-903c2be6f11d"),
                            UserId = 3
                        },
                        new
                        {
                            Id = new Guid("000a25c6-d323-4241-afd5-bf48ae01ef72"),
                            TeamId = new Guid("62d71bd2-78ea-45c3-b494-b5d44d22fd13"),
                            UserId = 3
                        },
                        new
                        {
                            Id = new Guid("0ae3c00f-75f4-4274-b413-87a7533a0397"),
                            TeamId = new Guid("62d71bd2-78ea-45c3-b494-b5d44d22fd13"),
                            UserId = 3
                        },
                        new
                        {
                            Id = new Guid("fb2eebbc-7e39-477f-b2d9-99dabe61fc44"),
                            TeamId = new Guid("bc003f06-b716-4675-b212-3c4c84875cdb"),
                            UserId = 4
                        },
                        new
                        {
                            Id = new Guid("0e0c82f9-794c-42a4-a528-662cfb1bd305"),
                            TeamId = new Guid("bc003f06-b716-4675-b212-3c4c84875cdb"),
                            UserId = 4
                        },
                        new
                        {
                            Id = new Guid("9b4f5c16-b379-41d4-9b6e-bcf4d5e9c351"),
                            TeamId = new Guid("7c33a82b-d5c8-4b2b-935a-92799d38f239"),
                            UserId = 4
                        },
                        new
                        {
                            Id = new Guid("46147625-a194-47d2-87db-22cf06476cf2"),
                            TeamId = new Guid("7c33a82b-d5c8-4b2b-935a-92799d38f239"),
                            UserId = 4
                        },
                        new
                        {
                            Id = new Guid("c709e203-35e8-4fc8-86ae-f3a525779e38"),
                            TeamId = new Guid("102203c4-4a49-4b0a-8254-ba540ec495bc"),
                            UserId = 5
                        },
                        new
                        {
                            Id = new Guid("8be1287b-4f0f-4f7b-8062-df88cc5fbc49"),
                            TeamId = new Guid("102203c4-4a49-4b0a-8254-ba540ec495bc"),
                            UserId = 5
                        },
                        new
                        {
                            Id = new Guid("da84953d-74c9-4e61-a110-1ff3915f0180"),
                            TeamId = new Guid("e7a404c1-32c2-4822-9dd2-6b12e786fa90"),
                            UserId = 5
                        },
                        new
                        {
                            Id = new Guid("19e522ba-0a03-436a-b6ac-b328e28d538b"),
                            TeamId = new Guid("e7a404c1-32c2-4822-9dd2-6b12e786fa90"),
                            UserId = 5
                        });
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.Tournament", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("TournamentPrize")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Tournament");

                    b.HasData(
                        new
                        {
                            Id = new Guid("da71ed04-2b4b-4bed-8ad0-9b742a4a9fa1"),
                            CreatedBy = new Guid("b7d57cbc-c414-4b4d-acfe-ce8bf1a5a2d2"),
                            Description = "Sample description for A1 Grand Prix",
                            StartingDate = new DateTime(2021, 5, 2, 9, 48, 46, 539, DateTimeKind.Local).AddTicks(5218),
                            Title = "A1 Grand Prix",
                            TournamentPrize = 38733736f
                        },
                        new
                        {
                            Id = new Guid("31a788d5-b94b-4b23-829c-834261e4fdf1"),
                            CreatedBy = new Guid("cfea4d98-af65-48a9-a005-8f73125a9c0a"),
                            Description = "Sample description for Formula One World Championship",
                            StartingDate = new DateTime(2021, 4, 28, 9, 48, 46, 542, DateTimeKind.Local).AddTicks(8067),
                            Title = "Formula One World Championship",
                            TournamentPrize = 13909490f
                        },
                        new
                        {
                            Id = new Guid("88becec0-069c-4906-8904-48fb2cccd772"),
                            CreatedBy = new Guid("206275c7-64a6-425a-83ad-9ac25d16afed"),
                            Description = "Sample description for FIA World Endurance Championship",
                            StartingDate = new DateTime(2021, 5, 6, 9, 48, 46, 542, DateTimeKind.Local).AddTicks(8508),
                            Title = "FIA World Endurance Championship",
                            TournamentPrize = 50111520f
                        },
                        new
                        {
                            Id = new Guid("5296d521-dee2-4a05-bd9e-b1a0b0a2d7c2"),
                            CreatedBy = new Guid("b4f983fe-f19d-436d-8901-b9aaf946c551"),
                            Description = "Sample description for FIA GT1 World Championship",
                            StartingDate = new DateTime(2021, 5, 2, 9, 48, 46, 542, DateTimeKind.Local).AddTicks(8867),
                            Title = "FIA GT1 World Championship",
                            TournamentPrize = 33445956f
                        },
                        new
                        {
                            Id = new Guid("58d2ef99-3c78-47db-9831-6e23a145fa35"),
                            CreatedBy = new Guid("a8d5bc50-65d3-4728-b6d6-b7b0f764aa45"),
                            Description = "Sample description for World Gliding Championships",
                            StartingDate = new DateTime(2021, 5, 1, 9, 48, 46, 542, DateTimeKind.Local).AddTicks(9293),
                            Title = "World Gliding Championships",
                            TournamentPrize = 82353190f
                        });
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e021096b-4652-4f7e-975f-dd3ad0ce272e"),
                            Email = "JosephCharles1@gmail.com",
                            FirstName = "Joseph",
                            LastName = "Charles",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "JosephCharles1"
                        },
                        new
                        {
                            Id = new Guid("b7d57cbc-c414-4b4d-acfe-ce8bf1a5a2d2"),
                            Email = "RobertRichard2@gmail.com",
                            FirstName = "Robert",
                            LastName = "Richard",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "RobertRichard2"
                        },
                        new
                        {
                            Id = new Guid("cfea4d98-af65-48a9-a005-8f73125a9c0a"),
                            Email = "RichardMichael3@gmail.com",
                            FirstName = "Richard",
                            LastName = "Michael",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "RichardMichael3"
                        },
                        new
                        {
                            Id = new Guid("206275c7-64a6-425a-83ad-9ac25d16afed"),
                            Email = "ThomasJohn4@gmail.com",
                            FirstName = "Thomas",
                            LastName = "John",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "ThomasJohn4"
                        },
                        new
                        {
                            Id = new Guid("b4f983fe-f19d-436d-8901-b9aaf946c551"),
                            Email = "JosephCharles5@gmail.com",
                            FirstName = "Joseph",
                            LastName = "Charles",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "JosephCharles5"
                        },
                        new
                        {
                            Id = new Guid("a8d5bc50-65d3-4728-b6d6-b7b0f764aa45"),
                            Email = "RobertDavid6@gmail.com",
                            FirstName = "Robert",
                            LastName = "David",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "RobertDavid6"
                        },
                        new
                        {
                            Id = new Guid("acd5c8ee-8054-44e8-9846-e985b41da5b0"),
                            Email = "RobertJohn7@gmail.com",
                            FirstName = "Robert",
                            LastName = "John",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "RobertJohn7"
                        },
                        new
                        {
                            Id = new Guid("78f79b17-27db-4143-b4a5-0f6e9b08af49"),
                            Email = "WilliamJames8@gmail.com",
                            FirstName = "William",
                            LastName = "James",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "WilliamJames8"
                        },
                        new
                        {
                            Id = new Guid("11012482-bfdb-4039-976d-4cb634630047"),
                            Email = "RobertMichael9@gmail.com",
                            FirstName = "Robert",
                            LastName = "Michael",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "RobertMichael9"
                        },
                        new
                        {
                            Id = new Guid("9e0777b1-562f-4b69-9b97-f21163384f76"),
                            Email = "ThomasCharles10@gmail.com",
                            FirstName = "Thomas",
                            LastName = "Charles",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "ThomasCharles10"
                        },
                        new
                        {
                            Id = new Guid("abfaf396-66ea-42e2-a5db-aaaad326737d"),
                            Email = "JohnCharles11@gmail.com",
                            FirstName = "John",
                            LastName = "Charles",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "JohnCharles11"
                        },
                        new
                        {
                            Id = new Guid("6215e27f-5451-4db9-9dad-e723ff69c03d"),
                            Email = "MichaelJoseph12@gmail.com",
                            FirstName = "Michael",
                            LastName = "Joseph",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "MichaelJoseph12"
                        },
                        new
                        {
                            Id = new Guid("076e7f87-0f3b-49d5-8f81-b481b0e5d5a9"),
                            Email = "CharlesWilliam13@gmail.com",
                            FirstName = "Charles",
                            LastName = "William",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "CharlesWilliam13"
                        },
                        new
                        {
                            Id = new Guid("1a1477a7-ddc8-48c4-869c-77935832eaa6"),
                            Email = "JohnThomas14@gmail.com",
                            FirstName = "John",
                            LastName = "Thomas",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "JohnThomas14"
                        },
                        new
                        {
                            Id = new Guid("28b63371-c907-4ec8-8745-8e4745fd8984"),
                            Email = "RichardCharles15@gmail.com",
                            FirstName = "Richard",
                            LastName = "Charles",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "RichardCharles15"
                        },
                        new
                        {
                            Id = new Guid("f316ff76-f7d8-4425-ad29-44bbff46a9bb"),
                            Email = "MichaelCharles16@gmail.com",
                            FirstName = "Michael",
                            LastName = "Charles",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "MichaelCharles16"
                        },
                        new
                        {
                            Id = new Guid("9434f83a-c829-49c9-90b1-8d964b9384f3"),
                            Email = "WilliamMichael17@gmail.com",
                            FirstName = "William",
                            LastName = "Michael",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "WilliamMichael17"
                        },
                        new
                        {
                            Id = new Guid("6e0b778a-7afe-4423-ab35-0584d247f824"),
                            Email = "MichaelMichael18@gmail.com",
                            FirstName = "Michael",
                            LastName = "Michael",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "MichaelMichael18"
                        },
                        new
                        {
                            Id = new Guid("57b098a6-f38f-4f38-8428-331c46beb0f1"),
                            Email = "JamesRichard19@gmail.com",
                            FirstName = "James",
                            LastName = "Richard",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "JamesRichard19"
                        });
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.Bidding", b =>
                {
                    b.HasOne("BarelyGambling.Core.Entity.Team", "Team")
                        .WithMany("Biddings")
                        .HasForeignKey("TeamId1");

                    b.HasOne("BarelyGambling.Core.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.Team", b =>
                {
                    b.HasOne("BarelyGambling.Core.Entity.Tournament", "Tournament")
                        .WithMany("Teams")
                        .HasForeignKey("TournamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.TeamMember", b =>
                {
                    b.HasOne("BarelyGambling.Core.Entity.Team", "Team")
                        .WithMany("TeamMembers")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BarelyGambling.Core.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId1");
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.Tournament", b =>
                {
                    b.HasOne("BarelyGambling.Core.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
