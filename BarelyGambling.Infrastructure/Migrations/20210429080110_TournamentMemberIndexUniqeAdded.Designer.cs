// <auto-generated />
using System;
using BarelyGambling.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BarelyGambling.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210429080110_TournamentMemberIndexUniqeAdded")]
    partial class TournamentMemberIndexUniqeAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BarelyGambling.Core.Entity.Bidding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.HasIndex("UserId");

                    b.ToTable("Bidding");
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("BiddingRestrictedTo")
                        .HasColumnType("real");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.Property<Guid>("TournamentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Won")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("TournamentId");

                    b.ToTable("Team");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5ae68f6e-cafc-4cbe-ad67-a21ec20cdfcc"),
                            BiddingRestrictedTo = 0f,
                            Description = "Sample description for A1 Grand Prix Team 1",
                            Title = "A1 Grand Prix Team 1",
                            Total = 0f,
                            TournamentId = new Guid("c4e58d1c-e45c-4449-b880-d6df7ed3b7b4"),
                            Won = true
                        },
                        new
                        {
                            Id = new Guid("c8c5b5ec-35c6-4f36-83f2-a08b3f01a77f"),
                            BiddingRestrictedTo = 0f,
                            Description = "Sample description for A1 Grand Prix Team 2",
                            Title = "A1 Grand Prix Team 2",
                            Total = 0f,
                            TournamentId = new Guid("c4e58d1c-e45c-4449-b880-d6df7ed3b7b4"),
                            Won = false
                        },
                        new
                        {
                            Id = new Guid("d87c76df-660c-41bb-9e55-039dfad339ee"),
                            BiddingRestrictedTo = 0f,
                            Description = "Sample description for Formula One World Championship Team 1",
                            Title = "Formula One World Championship Team 1",
                            Total = 0f,
                            TournamentId = new Guid("eed5cb93-11e3-408d-af52-335bd8104036"),
                            Won = true
                        },
                        new
                        {
                            Id = new Guid("9a40dab2-6ee8-4d68-a996-83ed846f74db"),
                            BiddingRestrictedTo = 0f,
                            Description = "Sample description for Formula One World Championship Team 2",
                            Title = "Formula One World Championship Team 2",
                            Total = 0f,
                            TournamentId = new Guid("eed5cb93-11e3-408d-af52-335bd8104036"),
                            Won = false
                        },
                        new
                        {
                            Id = new Guid("6595ddd6-a9fc-4496-87dd-249d529ef96b"),
                            BiddingRestrictedTo = 0f,
                            Description = "Sample description for FIA World Endurance Championship Team 1",
                            Title = "FIA World Endurance Championship Team 1",
                            Total = 0f,
                            TournamentId = new Guid("a60c0977-3634-433c-a753-76dc8a15cb0d"),
                            Won = true
                        },
                        new
                        {
                            Id = new Guid("fe0b0b69-1c59-49b7-92e3-793b7903d3de"),
                            BiddingRestrictedTo = 0f,
                            Description = "Sample description for FIA World Endurance Championship Team 2",
                            Title = "FIA World Endurance Championship Team 2",
                            Total = 0f,
                            TournamentId = new Guid("a60c0977-3634-433c-a753-76dc8a15cb0d"),
                            Won = false
                        },
                        new
                        {
                            Id = new Guid("94c7ad84-e955-4602-812d-4d943e49366a"),
                            BiddingRestrictedTo = 0f,
                            Description = "Sample description for FIA GT1 World Championship Team 1",
                            Title = "FIA GT1 World Championship Team 1",
                            Total = 0f,
                            TournamentId = new Guid("5c925585-14ba-46fa-b671-5d425a53bad2"),
                            Won = true
                        },
                        new
                        {
                            Id = new Guid("d9ebf5f2-8665-4698-83aa-2849b40abcfb"),
                            BiddingRestrictedTo = 0f,
                            Description = "Sample description for FIA GT1 World Championship Team 2",
                            Title = "FIA GT1 World Championship Team 2",
                            Total = 0f,
                            TournamentId = new Guid("5c925585-14ba-46fa-b671-5d425a53bad2"),
                            Won = false
                        },
                        new
                        {
                            Id = new Guid("29897d3d-91a3-4d3f-93a3-a0ec3ef996e1"),
                            BiddingRestrictedTo = 0f,
                            Description = "Sample description for World Gliding Championships Team 1",
                            Title = "World Gliding Championships Team 1",
                            Total = 0f,
                            TournamentId = new Guid("9d260587-c108-4188-9b67-71cd624aa093"),
                            Won = true
                        },
                        new
                        {
                            Id = new Guid("1566ea85-2541-44e4-b2b8-db87865120c7"),
                            BiddingRestrictedTo = 0f,
                            Description = "Sample description for World Gliding Championships Team 2",
                            Title = "World Gliding Championships Team 2",
                            Total = 0f,
                            TournamentId = new Guid("9d260587-c108-4188-9b67-71cd624aa093"),
                            Won = false
                        });
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.TeamMember", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PlayerType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("UserId", "Id", "TeamId");

                    b.HasIndex("TeamId");

                    b.ToTable("TeamMember");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("b1367521-a186-4107-a9e9-289f2608d642"),
                            Id = new Guid("b2876545-e0df-426a-a848-d90140cbc713"),
                            TeamId = new Guid("5ae68f6e-cafc-4cbe-ad67-a21ec20cdfcc"),
                            PlayerType = 0
                        },
                        new
                        {
                            UserId = new Guid("f376b451-a815-45f9-b68d-5645b31d509a"),
                            Id = new Guid("6c441747-ec6f-4aae-9fc0-523d29241e92"),
                            TeamId = new Guid("5ae68f6e-cafc-4cbe-ad67-a21ec20cdfcc"),
                            PlayerType = 0
                        },
                        new
                        {
                            UserId = new Guid("a9d83a6b-4140-4086-98f6-97a8a18282f6"),
                            Id = new Guid("725dce06-91c8-4ffe-83fc-282ef865e1df"),
                            TeamId = new Guid("c8c5b5ec-35c6-4f36-83f2-a08b3f01a77f"),
                            PlayerType = 0
                        },
                        new
                        {
                            UserId = new Guid("03b6544b-350d-477d-9077-77958dacbf07"),
                            Id = new Guid("d63e8ea0-92df-4034-bdae-3023b3182e52"),
                            TeamId = new Guid("c8c5b5ec-35c6-4f36-83f2-a08b3f01a77f"),
                            PlayerType = 0
                        },
                        new
                        {
                            UserId = new Guid("b1367521-a186-4107-a9e9-289f2608d642"),
                            Id = new Guid("88963e46-023f-4889-a7fc-a0aafb185347"),
                            TeamId = new Guid("d87c76df-660c-41bb-9e55-039dfad339ee"),
                            PlayerType = 0
                        },
                        new
                        {
                            UserId = new Guid("f376b451-a815-45f9-b68d-5645b31d509a"),
                            Id = new Guid("ade62dff-5843-42c5-86f3-f7bbb039f2d9"),
                            TeamId = new Guid("d87c76df-660c-41bb-9e55-039dfad339ee"),
                            PlayerType = 0
                        },
                        new
                        {
                            UserId = new Guid("a9d83a6b-4140-4086-98f6-97a8a18282f6"),
                            Id = new Guid("b94d59ce-cdbb-43a5-92c0-ae60fa696a9a"),
                            TeamId = new Guid("9a40dab2-6ee8-4d68-a996-83ed846f74db"),
                            PlayerType = 0
                        },
                        new
                        {
                            UserId = new Guid("03b6544b-350d-477d-9077-77958dacbf07"),
                            Id = new Guid("71aa401a-f790-4c27-8ebc-6077f814e9b2"),
                            TeamId = new Guid("9a40dab2-6ee8-4d68-a996-83ed846f74db"),
                            PlayerType = 0
                        },
                        new
                        {
                            UserId = new Guid("b1367521-a186-4107-a9e9-289f2608d642"),
                            Id = new Guid("4e71c0c0-269f-4ae9-9581-040d44ab79be"),
                            TeamId = new Guid("6595ddd6-a9fc-4496-87dd-249d529ef96b"),
                            PlayerType = 0
                        },
                        new
                        {
                            UserId = new Guid("f376b451-a815-45f9-b68d-5645b31d509a"),
                            Id = new Guid("e139e6eb-b803-414c-826f-29cfc0c60dda"),
                            TeamId = new Guid("6595ddd6-a9fc-4496-87dd-249d529ef96b"),
                            PlayerType = 0
                        },
                        new
                        {
                            UserId = new Guid("a9d83a6b-4140-4086-98f6-97a8a18282f6"),
                            Id = new Guid("7eb57e8b-1f10-493c-8de1-21dc2fa06e93"),
                            TeamId = new Guid("fe0b0b69-1c59-49b7-92e3-793b7903d3de"),
                            PlayerType = 0
                        },
                        new
                        {
                            UserId = new Guid("03b6544b-350d-477d-9077-77958dacbf07"),
                            Id = new Guid("153f399f-cf52-4f40-9020-51809733e9a4"),
                            TeamId = new Guid("fe0b0b69-1c59-49b7-92e3-793b7903d3de"),
                            PlayerType = 0
                        },
                        new
                        {
                            UserId = new Guid("b1367521-a186-4107-a9e9-289f2608d642"),
                            Id = new Guid("01990f90-25be-43b2-a20e-d25c4d4bec2c"),
                            TeamId = new Guid("94c7ad84-e955-4602-812d-4d943e49366a"),
                            PlayerType = 0
                        },
                        new
                        {
                            UserId = new Guid("f376b451-a815-45f9-b68d-5645b31d509a"),
                            Id = new Guid("804b4b6b-ace7-40ee-aecb-98277e92bbe4"),
                            TeamId = new Guid("94c7ad84-e955-4602-812d-4d943e49366a"),
                            PlayerType = 0
                        },
                        new
                        {
                            UserId = new Guid("a9d83a6b-4140-4086-98f6-97a8a18282f6"),
                            Id = new Guid("5a736a4b-5cf0-4125-846a-6da1df6e4bcc"),
                            TeamId = new Guid("d9ebf5f2-8665-4698-83aa-2849b40abcfb"),
                            PlayerType = 0
                        },
                        new
                        {
                            UserId = new Guid("03b6544b-350d-477d-9077-77958dacbf07"),
                            Id = new Guid("2856eaf5-9324-4b6a-8c9b-3ce574d12f4a"),
                            TeamId = new Guid("d9ebf5f2-8665-4698-83aa-2849b40abcfb"),
                            PlayerType = 0
                        },
                        new
                        {
                            UserId = new Guid("b1367521-a186-4107-a9e9-289f2608d642"),
                            Id = new Guid("e973465f-f585-4ccd-adc4-6ce106f7eace"),
                            TeamId = new Guid("29897d3d-91a3-4d3f-93a3-a0ec3ef996e1"),
                            PlayerType = 0
                        },
                        new
                        {
                            UserId = new Guid("f376b451-a815-45f9-b68d-5645b31d509a"),
                            Id = new Guid("079c07a5-6868-40b9-a0f7-bf2d22db0ae9"),
                            TeamId = new Guid("29897d3d-91a3-4d3f-93a3-a0ec3ef996e1"),
                            PlayerType = 0
                        },
                        new
                        {
                            UserId = new Guid("a9d83a6b-4140-4086-98f6-97a8a18282f6"),
                            Id = new Guid("cf6587af-df7f-4b6d-bd78-191e4285b41b"),
                            TeamId = new Guid("1566ea85-2541-44e4-b2b8-db87865120c7"),
                            PlayerType = 0
                        },
                        new
                        {
                            UserId = new Guid("03b6544b-350d-477d-9077-77958dacbf07"),
                            Id = new Guid("65d026ea-f449-4f5d-8588-23eb71683cfe"),
                            TeamId = new Guid("1566ea85-2541-44e4-b2b8-db87865120c7"),
                            PlayerType = 0
                        });
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.Tournament", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasEnded")
                        .HasColumnType("bit");

                    b.Property<bool>("HasStarted")
                        .HasColumnType("bit");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("TournamentPrize")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Tournament");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c4e58d1c-e45c-4449-b880-d6df7ed3b7b4"),
                            CreatedAt = new DateTime(2021, 4, 29, 13, 31, 9, 739, DateTimeKind.Local).AddTicks(2673),
                            CreatedBy = new Guid("f376b451-a815-45f9-b68d-5645b31d509a"),
                            Description = "Sample description for A1 Grand Prix",
                            HasEnded = false,
                            HasStarted = false,
                            Place = "Los Angeles",
                            StartingDate = new DateTime(2021, 5, 1, 13, 31, 9, 737, DateTimeKind.Local).AddTicks(843),
                            Title = "A1 Grand Prix",
                            TournamentPrize = 42003676f
                        },
                        new
                        {
                            Id = new Guid("eed5cb93-11e3-408d-af52-335bd8104036"),
                            CreatedAt = new DateTime(2021, 4, 29, 13, 31, 9, 741, DateTimeKind.Local).AddTicks(6592),
                            CreatedBy = new Guid("a9d83a6b-4140-4086-98f6-97a8a18282f6"),
                            Description = "Sample description for Formula One World Championship",
                            HasEnded = false,
                            HasStarted = false,
                            Place = "Los Angeles",
                            StartingDate = new DateTime(2021, 5, 8, 13, 31, 9, 741, DateTimeKind.Local).AddTicks(6505),
                            Title = "Formula One World Championship",
                            TournamentPrize = 26585356f
                        },
                        new
                        {
                            Id = new Guid("a60c0977-3634-433c-a753-76dc8a15cb0d"),
                            CreatedAt = new DateTime(2021, 4, 29, 13, 31, 9, 741, DateTimeKind.Local).AddTicks(7490),
                            CreatedBy = new Guid("03b6544b-350d-477d-9077-77958dacbf07"),
                            Description = "Sample description for FIA World Endurance Championship",
                            HasEnded = false,
                            HasStarted = false,
                            Place = "Los Angeles",
                            StartingDate = new DateTime(2021, 4, 29, 13, 31, 9, 741, DateTimeKind.Local).AddTicks(7480),
                            Title = "FIA World Endurance Championship",
                            TournamentPrize = 76418280f
                        },
                        new
                        {
                            Id = new Guid("5c925585-14ba-46fa-b671-5d425a53bad2"),
                            CreatedAt = new DateTime(2021, 4, 29, 13, 31, 9, 741, DateTimeKind.Local).AddTicks(8024),
                            CreatedBy = new Guid("8edd90be-753c-4029-8f88-84e3c8cb418b"),
                            Description = "Sample description for FIA GT1 World Championship",
                            HasEnded = false,
                            HasStarted = false,
                            Place = "Los Angeles",
                            StartingDate = new DateTime(2021, 5, 5, 13, 31, 9, 741, DateTimeKind.Local).AddTicks(8018),
                            Title = "FIA GT1 World Championship",
                            TournamentPrize = 47028100f
                        },
                        new
                        {
                            Id = new Guid("9d260587-c108-4188-9b67-71cd624aa093"),
                            CreatedAt = new DateTime(2021, 4, 29, 13, 31, 9, 741, DateTimeKind.Local).AddTicks(8655),
                            CreatedBy = new Guid("e6883091-0fab-4cd8-90f9-0b3fa1ce9923"),
                            Description = "Sample description for World Gliding Championships",
                            HasEnded = false,
                            HasStarted = false,
                            Place = "Los Angeles",
                            StartingDate = new DateTime(2021, 5, 7, 13, 31, 9, 741, DateTimeKind.Local).AddTicks(8650),
                            Title = "World Gliding Championships",
                            TournamentPrize = 74099800f
                        });
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CoverUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b1367521-a186-4107-a9e9-289f2608d642"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "JamesJames1@gmail.com",
                            FirstName = "James",
                            LastName = "James",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "JamesJames1"
                        },
                        new
                        {
                            Id = new Guid("f376b451-a815-45f9-b68d-5645b31d509a"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "WilliamRichard2@gmail.com",
                            FirstName = "William",
                            LastName = "Richard",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "WilliamRichard2"
                        },
                        new
                        {
                            Id = new Guid("a9d83a6b-4140-4086-98f6-97a8a18282f6"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "WilliamJoseph3@gmail.com",
                            FirstName = "William",
                            LastName = "Joseph",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "WilliamJoseph3"
                        },
                        new
                        {
                            Id = new Guid("03b6544b-350d-477d-9077-77958dacbf07"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "RobertJames4@gmail.com",
                            FirstName = "Robert",
                            LastName = "James",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "RobertJames4"
                        },
                        new
                        {
                            Id = new Guid("8edd90be-753c-4029-8f88-84e3c8cb418b"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "JohnWilliam5@gmail.com",
                            FirstName = "John",
                            LastName = "William",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "JohnWilliam5"
                        },
                        new
                        {
                            Id = new Guid("e6883091-0fab-4cd8-90f9-0b3fa1ce9923"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "JamesMichael6@gmail.com",
                            FirstName = "James",
                            LastName = "Michael",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "JamesMichael6"
                        },
                        new
                        {
                            Id = new Guid("ce4691f6-d753-4ab8-9779-4029577f43e1"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "CharlesRichard7@gmail.com",
                            FirstName = "Charles",
                            LastName = "Richard",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "CharlesRichard7"
                        },
                        new
                        {
                            Id = new Guid("3cca193f-0e2c-4a52-b46c-8b1fbaf9c9ab"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "JosephJohn8@gmail.com",
                            FirstName = "Joseph",
                            LastName = "John",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "JosephJohn8"
                        },
                        new
                        {
                            Id = new Guid("c3f35c49-e005-4ef1-a1a3-d535e16d2401"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "RichardDavid9@gmail.com",
                            FirstName = "Richard",
                            LastName = "David",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "RichardDavid9"
                        },
                        new
                        {
                            Id = new Guid("fb4e40f7-f376-4284-8548-c7e5c8860391"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "ThomasJames10@gmail.com",
                            FirstName = "Thomas",
                            LastName = "James",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "ThomasJames10"
                        },
                        new
                        {
                            Id = new Guid("eef3c005-df19-4917-8f11-d78ee794f74e"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "CharlesJames11@gmail.com",
                            FirstName = "Charles",
                            LastName = "James",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "CharlesJames11"
                        },
                        new
                        {
                            Id = new Guid("beea1cdc-209e-4080-86af-f30f6bc9a599"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "WilliamJohn12@gmail.com",
                            FirstName = "William",
                            LastName = "John",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "WilliamJohn12"
                        },
                        new
                        {
                            Id = new Guid("2fb6ac40-3076-4b10-8324-80a4ff62fca2"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "CharlesJoseph13@gmail.com",
                            FirstName = "Charles",
                            LastName = "Joseph",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "CharlesJoseph13"
                        },
                        new
                        {
                            Id = new Guid("11ced1f7-0778-47e8-bd44-d13128b6c557"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "MichaelMichael14@gmail.com",
                            FirstName = "Michael",
                            LastName = "Michael",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "MichaelMichael14"
                        },
                        new
                        {
                            Id = new Guid("8550f464-f7df-4328-8642-18f4b98d24e9"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "DavidCharles15@gmail.com",
                            FirstName = "David",
                            LastName = "Charles",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "DavidCharles15"
                        },
                        new
                        {
                            Id = new Guid("bfd0cd5f-420f-4208-8558-05e0da34b0da"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "JamesMichael16@gmail.com",
                            FirstName = "James",
                            LastName = "Michael",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "JamesMichael16"
                        },
                        new
                        {
                            Id = new Guid("c6ffca93-bbc9-4b66-9b28-e0a79334f83c"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "DavidThomas17@gmail.com",
                            FirstName = "David",
                            LastName = "Thomas",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "DavidThomas17"
                        },
                        new
                        {
                            Id = new Guid("78b1330e-67cf-4d6b-9be5-2553155fa896"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "MichaelRichard18@gmail.com",
                            FirstName = "Michael",
                            LastName = "Richard",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "MichaelRichard18"
                        },
                        new
                        {
                            Id = new Guid("61c3e5b1-553e-4608-b171-22df1d66e95d"),
                            CoverUrl = "https://via.placeholder.com/150",
                            Email = "WilliamThomas19@gmail.com",
                            FirstName = "William",
                            LastName = "Thomas",
                            Password = "$2a$11$Hx.1.HZkvkfw7T52BbdhLuJQAhdvR5Y.1nSvwCxJ1sK9paLLtqi5S",
                            UserName = "WilliamThomas19"
                        });
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.Bidding", b =>
                {
                    b.HasOne("BarelyGambling.Core.Entity.Team", null)
                        .WithMany("Biddings")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BarelyGambling.Core.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.Team", b =>
                {
                    b.HasOne("BarelyGambling.Core.Entity.Tournament", "Tournament")
                        .WithMany("Teams")
                        .HasForeignKey("TournamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.TeamMember", b =>
                {
                    b.HasOne("BarelyGambling.Core.Entity.Team", null)
                        .WithMany("TeamMembers")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BarelyGambling.Core.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BarelyGambling.Core.Entity.Tournament", b =>
                {
                    b.HasOne("BarelyGambling.Core.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
